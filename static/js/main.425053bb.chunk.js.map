{"version":3,"sources":["constants.js","StartPage/StartPage.js","Common/SantaTable/SantaCard.js","Common/SantaTable/SantaTable.js","EditPage/SantaInput.js","EditPage/EditPage.js","Common/CustomModal.js","ResultPage/ResultPage.js","Common/Header.js","Common/Footer.js","Utils.js","SecretSanta.js","App.js","reportWebVitals.js","index.js"],"names":["logo","PAGE","StartPage","props","useEffect","removeAllSantas","Container","className","src","alt","Button","variant","onClick","onStart","SantaCard","Card","showResult","santa","Body","removeSanta","CloseButton","id","Title","name","assigned","Text","SantaTable","fluid","santas","length","Row","xs","sm","md","map","Col","assignedVisible","SantaInput","useState","newName","setNewName","errorMsg","setErrorMsg","refAddBtn","useRef","cleanErrorMsg","setInterval","clearInterval","validateName","i","Form","onSubmit","e","preventDefault","addSanta","FormControl","value","placeholder","onChange","target","maxLength","ref","type","Overlay","current","show","placement","Tooltip","EditPage","refConfirmBtn","validateSantaList","toPage","CustomModal","Modal","size","centered","Header","closeButton","title","content","ResultPage","showModal","setShowModal","modalTitle","setModalTitle","modalContent","setModalContent","setAssignedVisibility","assignRecipients","recipient","onHide","Navbar","Footer","myPageClicked","setMyPageClicked","projectClicked","setprojectClicked","resetTimer","ButtonGroup","href","fetch","then","response","text","dangerouslySetInnerHTML","__html","marked","parse","url","window","open","Utils","n","this","factorial","min","max","Math","round","random","result","Array","keys","mark","fill","D","E","u","j","randomInt","SecretSanta","state","page","rules","bind","new_state","setState","santaName","new_santa","Date","now","targetID","filter","assignments","isResultValid","derangement","newState","loadPage","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.425053bb.chunk.js","sourcesContent":["export const logo = 'https://1.bp.blogspot.com/-NtTQSOUkR9o/XVKfuVfLHcI/AAAAAAABUEA/1JsyRnHO9-8SxPb_OYm-HKAQ10dV2C45QCLcBGAs/s1600/christmas_black_santa.png';\n\nexport const PAGE = {\n    START: 0,\n    EDIT: 1,\n    RESULT: 2\n}","import React, { useEffect } from \"react\";\nimport { Button, Container } from \"react-bootstrap\";\nimport { logo } from \"../constants\";\nimport \"./StartPage.css\";\n\nexport function StartPage(props) {\n    // Reset santas, when the start screen is loaded\n    useEffect(() => {\n        props.removeAllSantas();\n    }, []);\n\n    return (\n        <Container className='StartPage'>\n            <Container>\n                <img src={logo} alt=\"logo\" />\n                <div>\n                    <p className=\"App-Name\">Secret Santa Generator</p>\n                    <Button variant=\"outline-dark\" onClick={props.onStart}>Start</Button>\n                </div>\n            </Container>\n        </Container>\n    );\n}","import React from \"react\";\nimport { Card, CloseButton } from \"react-bootstrap\";\n\nexport function SantaCard(props) {\n    const handleShowResult = () => {\n        props.showResult(props.santa);\n    }\n\n    const handleRemove = () => {\n        props.removeSanta(props.santa.id);\n    };\n\n    return (\n        <Card className=\"SantaCard\" onClick={props.showResult? handleShowResult : null}>\n            <Card.Body>\n                { props.removeSanta && <CloseButton className=\"right\" onClick={handleRemove} /> }\n                <Card.Title>{props.santa.name}</Card.Title>\n                { props.assigned && <Card.Text>Assigned to {props.assigned.name}</Card.Text> }\n            </Card.Body>\n        </Card>\n    );\n}","import React from \"react\";\nimport './SantaTable.css';\nimport { SantaCard } from \"./SantaCard\";\nimport { CardGroup, Col, Container, Row } from \"react-bootstrap\";\n\nexport function SantaTable(props) {\n    const generateSantaCards = () => {\n        if ( props.santas.length > 0 ) {\n            return (\n                <Row xs={2} sm={4} md={5}>\n                    { props.santas.map( (santa) => (\n                        <Col>\n                            <SantaCard \n                                santa={santa} \n                                showResult={props.showResult} \n                                removeSanta={props.removeSanta}\n                                assigned={props.assignedVisible ? props.santas[santa.assigned] : null }\n                            />\n                        </Col>\n                    ))}\n                </Row>\n            );\n        } else {\n            return <p>There are no santa yet...</p>;\n        }\n    };\n    \n    return (\n        <Container className='SantaTable' fluid >\n            { generateSantaCards() }\n        </Container>\n    );\n}","import React, { useEffect, useRef, useState } from \"react\";\nimport { Button, Form, FormControl, Overlay, Tooltip } from \"react-bootstrap\";\n\nexport function SantaInput(props) {\n    const cleanErrorTimer = 5000;\n\n    const [newName, setNewName] = useState('');\n    const [errorMsg, setErrorMsg] = useState(false);\n\n    const refAddBtn = useRef(null);\n\n    const ERROR_EMPTY = \"Please enter a name.\";\n    const ERROR_DUPLICATE = \"Name has been entered.\";\n\n    useEffect(() => {\n        const cleanErrorMsg = setInterval(() => (\n            setErrorMsg(false)\n        ), cleanErrorTimer);\n        return () => clearInterval(cleanErrorMsg);\n    }, [errorMsg]);\n    \n    const handleChange = (e) => {\n        setNewName(e.target.value);\n    }\n\n    const handleAdd = (e) => {\n        e.preventDefault();\n\n        if(validateName()) {\n            props.addSanta(newName);\n            setNewName('');　// clean the textbox\n            setErrorMsg(false);\n        }\n    }\n\n    const validateName = () => {\n        if (newName === '') {\n            setErrorMsg(ERROR_EMPTY);\n            return false;\n        }\n\n        for(let i = 0; i < props.santas.length; i++) {\n            if(props.santas[i].name === newName) {\n                setErrorMsg(ERROR_DUPLICATE);\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    return (\n        <Form className='SantaInput' onSubmit={handleAdd}>\n            <FormControl \n                value={newName}\n                placeholder='Enter a name here...'\n                onChange={handleChange}\n                maxLength={20}/>\n            <Button \n                ref={refAddBtn}\n                variant=\"outline-dark\"\n                type=\"submit\" \n                value=\"Add\">\n                Add\n            </Button>\n            <Overlay target={refAddBtn.current} show={errorMsg} placement=\"top\">\n                <Tooltip>{errorMsg}</Tooltip>\n            </Overlay>\n        </Form>\n    );\n}","import React, { useState, useRef, useEffect } from \"react\";\nimport './EditPage.css';\nimport { Button, Container, Overlay, Tooltip } from \"react-bootstrap\";\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { SantaInput } from \"./SantaInput\";\nimport { PAGE } from \"../constants\";\n\nexport function EditPage(props){\n    const cleanErrorTimer = 5000;\n\n    const [errorMsg, setErrorMsg] = useState(false);\n\n    const refConfirmBtn = useRef(null);\n\n    const ERROR_NOT_ENOUGHT_CANDIDATE = \"Please enter at least 2 names.\";\n    \n    useEffect(() => {\n        const cleanErrorMsg = setInterval(() => (\n          setErrorMsg(false)\n        ), cleanErrorTimer);\n        return () => clearInterval(cleanErrorMsg); \n    }, [errorMsg]);\n\n    const handleConfirm = () => {\n        if(validateSantaList()) {\n            props.toPage(PAGE.RESULT);\n        }\n    };\n\n    const handleBack = () => {\n        props.toPage(PAGE.START);\n    }\n    \n    const validateSantaList = () => {\n        if (props.santas.length < 2) {\n            setErrorMsg(ERROR_NOT_ENOUGHT_CANDIDATE);\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    return (\n        <Container className='EditPage' fluid>\n            <SantaInput {...props}/>\n            <SantaTable {...props}/>\n            <div className='ButtonBar'>\n                <Button variant=\"outline-dark\" onClick={handleBack}>Back</Button>\n                <Button ref={refConfirmBtn} variant=\"outline-dark\" onClick={handleConfirm}>Confirm</Button>\n                <Overlay target={refConfirmBtn.current} show={errorMsg} placement=\"bottom\">\n                    <Tooltip>{errorMsg}</Tooltip>\n                </Overlay>\n            </div>\n        </Container>\n    );\n}\n\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport \"./CustomModal.css\";\n\nexport function CustomModal(props) {\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    { props.title }\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <p>{ props.content }</p>\n            </Modal.Body>\n        </Modal>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport './ResultPage.css';\nimport { Button, Container } from \"react-bootstrap\";\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { CustomModal } from \"../Common/CustomModal\";\nimport { PAGE } from \"../constants\";\n\nexport function ResultPage(props) {\n    const [showModal, setShowModal] = useState(false);\n    const [modalTitle, setModalTitle] = useState(null);\n    const [modalContent, setModalContent] = useState(null);\n    const [assignedVisible, setAssignedVisibility] = useState(false);\n\n    // Assign recipient once when the page is loaded\n    useEffect(() => {\n        props.assignRecipients();\n    }, []);\n\n    const handleBack = () => {\n        props.toPage(PAGE.EDIT);\n    }\n\n    const handleShuffle = () => {\n        props.assignRecipients();\n    }\n\n    const handleShow = () => {\n        setAssignedVisibility(!assignedVisible);\n    };\n\n    const handleFinish = () => {\n        props.toPage(PAGE.START);\n    };\n\n    const showResult = (santa) => {\n        // find recipient by array index\n        const recipient = props.santas[santa.assigned];\n\n        setModalTitle(<p>{santa.name}</p>);\n        setModalContent(\n            <p>Your recipient is <strong>{recipient.name}</strong>!</p>\n        );\n        setShowModal(true);\n    }\n\n    return (\n        <Container className='ResultPage' fluid>\n            <SantaTable santas={props.santas} showResult={showResult} assignedVisible={assignedVisible}/>\n            <p className=\"result-note\">*You can click on each box to check the recipient for a specific santa.</p>\n            <div className='ButtonBar'>\n                <Button variant=\"outline-dark\" onClick={handleBack}>Back</Button>\n                <Button variant=\"outline-dark\" onClick={handleShuffle}>Reshuffle!</Button>\n                <Button variant=\"outline-dark\" onClick={handleShow}>Show All!</Button>\n                <Button variant=\"outline-dark\" onClick={handleFinish}>Finished</Button>\n            </div>\n            <CustomModal \n                show={showModal}\n                onHide={() => setShowModal(false)}\n                title={modalTitle}\n                content={modalContent}\n            />\n        </Container>\n    );\n}","import React from \"react\";\nimport { Container, Navbar } from \"react-bootstrap\";\nimport './Header.css';\nimport { logo } from \"../constants\";\n\nexport function Header(props) {\n    return (\n        <Navbar className=\"Header\">\n            <Container className=\"justify-content-center\" fluid>\n                <img src={logo} alt=\"logo\" className=\"logo\" />\n                <p className=\"App-Name\">Secret Santa Generator</p>\n            </Container>\n        </Navbar>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Navbar } from 'react-bootstrap';\nimport { marked } from 'marked';\nimport './Footer.css';\nimport { CustomModal } from './CustomModal';\n\nconst changelogPath = \"https://raw.githubusercontent.com/Kit2196/secret-santa-generator/main/CHANGELOG.md\";\n        \nexport function Footer(props) {\n    const [showModal, setShowModal] = useState(false);\n    const [modalTitle, setModalTitle] = useState(null);\n    const [modalContent, setModalContent] = useState(null);\n    const [myPageClicked, setMyPageClicked] = useState(false);\n    const [projectClicked, setprojectClicked] = useState(false);\n\n    useEffect(() => {\n        const resetTimer = setInterval(() => setMyPageClicked(false), 1000);\n        return () => clearInterval(resetTimer);\n    }, [myPageClicked]);\n\n    useEffect(() => {\n        const resetTimer = setInterval(() => setprojectClicked(false), 1000);\n        return () => clearInterval(resetTimer);\n    }, [projectClicked]);\n\n    const showCredit = () => {\n        setModalTitle('Credit');\n        setModalContent(\n            <p>Illustration: <a　href=\"https://www.irasutoya.com/\">いらすとや</a></p>\n        );\n        setShowModal(true);\n    }\n\n    const showChangeLog = () => {\n        setModalTitle(<p>Loading</p>);\n        setShowModal(true);\n\n        fetch(changelogPath).then(\n            response => response.text()\n        ).then( \n            (text) => {\n                setModalTitle(<p>ChangeLog</p>);\n                setModalContent(\n                    <div className=\"Changelog\" dangerouslySetInnerHTML={{__html: marked.parse(text)}} \n                />)\n            }\n        );\n    }\n\n    const openPage = (url) => window.open(url, \"_blank\");\n\n    return (\n        <Navbar className='Footer justify-content-center'>\n            <ButtonGroup className='Footer-links'>\n                <Button variant=\"link\" onClick={showCredit}>Credit</Button>\n                <Button variant=\"link\" onClick={showChangeLog}>Change Log</Button>\n                <Button variant=\"link\" onClick={() => openPage('https://github.com/Kit2196/secret-santa-generator')}>Github Repository</Button>\n                <Button variant=\"link\" onClick={() => setMyPageClicked(true)}>{ myPageClicked ? \"WIP\": \"My page\" }</Button>\n                <Button variant=\"link\" onClick={() => setprojectClicked(true)}>{ projectClicked ? \"WIP\": \"Other projects\" }</Button>\n            </ButtonGroup>\n            <CustomModal \n                show={showModal} \n                onHide={() => setShowModal(false)}\n                title={modalTitle}\n                content={modalContent}\n            />\n        </Navbar>\n    );\n};","export class Utils {\n    /**\n     * Calculate the factorial for n\n     * \n     * @returns n!\n     */\n    static factorial(n) {\n        return (n > 1) ? this.factorial(n - 1) * n : 1;\n    }\n\n    /**\n     * Generate a random integer between range\n     * \n     * @param {int} min \n     * @param {int} max \n     * @returns a random integer between min and max \n     */\n    static randomInt(min, max) {\n        return Math.round(Math.random() * (max - min)) + min;\n    }\n\n    /**\n     * Generate a random derangement array\n     * \n     * Based on \"Generating Random Derangements\" by Martinez et. al\n     * source: https://epubs.siam.org/doi/pdf/10.1137/1.9781611972986.7\n     * @param {int} n the length of the desired derangement array\n     * @return the resulting derangement array\n     */\n    static derangement(n) {\n        let result = [...Array(n).keys()]; // init array: 0,1, 2, ...,n-1\n        let mark = Array(n).fill(false);   // init: all false\n\n        const D = (n) => (\n            (Utils.factorial(n) + 1) / Math.E\n        );\n\n        let i = n; // current index\n        let u = n; \n\n        while (u >= 2) {\n            if (!mark[i-1]) {\n                do {\n                    var j = Utils.randomInt(1, i - 1);\n                } while (mark[j-1]); // Until !mark[j]\n\n                // swap A[i] and A[j]\n                [result[i-1], result[j-1]] = [result[j-1], result[i-1]];\n\n                let p = Math.random();\n                if ( p < (u - 1) * D(u - 2) / D(u) ) {\n                    mark[j - 1] = true;\n                    u--;\n                }\n                u--;\n            }\n            i--;\n        }\n\n        return result;\n    }\n}","import React from \"react\";\nimport './SecretSanta.css';\nimport { StartPage } from \"./StartPage/StartPage\";\nimport { EditPage } from \"./EditPage/EditPage\";\nimport { ResultPage } from \"./ResultPage/ResultPage\";\nimport { Header } from \"./Common/Header\";\nimport { Footer } from './Common/Footer';\nimport { Utils } from \"./Utils\";\nimport { PAGE } from \"./constants\";\n\nexport class SecretSanta extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: PAGE.START,\n            santas: [],\n            rules: {}\n        }\n\n        this.toPage = this.toPage.bind(this);\n        this.addSanta = this.addSanta.bind(this);\n        this.removeSanta = this.removeSanta.bind(this);\n        this.removeAllSantas = this.removeAllSantas.bind(this);\n        this.assignRecipients = this.assignRecipients.bind(this);\n    }\n\n    toPage(page) {\n        let new_state = this.state;\n        new_state.page = page;\n        this.setState(new_state);\n    }\n\n    // State-related functions\n    addSanta(santaName) {\n        const new_santa = {\n            id: Date.now(),\n            name: santaName,\n            assigned: null\n        };\n        \n        let new_state = this.state;\n        new_state.santas = [ ...new_state.santas, new_santa ];\n        this.setState(new_state);\n    }\n\n    removeSanta(targetID) {\n        let new_state = this.state;\n        new_state.santas = new_state.santas.filter((santa) => (santa.id !== targetID));\n        this.setState(new_state);\n    }\n\n    removeAllSantas() {\n        let new_state = this.state;\n        new_state.santas = [];\n        this.setState(new_state);\n    }\n    \n    assignRecipients() {\n        const isResultValid = (result) => {\n            for(var i = 0; i < result.length; i++ ) {\n                if (i === result[i]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        let assignments;\n\n        do {\n        // Generate new pattern\n            assignments = Utils.derangement(this.state.santas.length);\n        } while(!isResultValid(assignments));\n\n        let newState = this.state;\n        // Assign recipient for each santa to the 'assigned' field\n        for( let i = 0; i < this.state.santas.length; i++ ) {\n            newState.santas[i].assigned = assignments[i];\n        }\n\n        this.setState(newState);\n    }\n\n    loadPage() {\n        switch(this.state.page) {\n            case PAGE.START:\n                return(\n                    <StartPage \n                        onStart={() => {this.toPage(PAGE.EDIT)}}\n                        removeAllSantas={this.removeAllSantas}\n                    />\n                );\n            case PAGE.EDIT:\n                return (\n                    <EditPage \n                        santas={this.state.santas}\n                        addSanta={this.addSanta}\n                        removeSanta={this.removeSanta}\n                        toPage={this.toPage}\n                    />\n                );\n            case PAGE.RESULT:\n                return (\n                    <ResultPage \n                        santas={this.state.santas}\n                        assignRecipients={this.assignRecipients}\n                        toPage={this.toPage}\n                    />\n                );\n            default:\n                return (<p>Error! Page not found!</p>);\n        }\n    }\n\n    render () {\n        return (\n            <div className='SecretSanta'>\n                { this.state.page != PAGE.START && <Header /> }\n                { this.loadPage() }\n                < Footer />\n            </div>\n        );\n    }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { SecretSanta } from './SecretSanta';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SecretSanta />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}