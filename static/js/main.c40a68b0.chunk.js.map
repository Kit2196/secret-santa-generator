{"version":3,"sources":["constants.js","StartPage/StartPage.js","Common/SantaTable/SantaCell.js","Common/SantaTable/SantaTable.js","EditPage/SantaInput.js","EditPage/EditPage.js","Common/Overlay.js","ResultPage/ResultPage.js","Common/Header.js","Utils.js","SecretSanta.js","Common/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["logo","PAGE","StartPage","props","useEffect","removeAllSantas","className","src","alt","onClick","onStart","SantaCell","showResult","santa","name","assigned","removeSanta","id","SantaTable","santas","length","map","assignedVisible","SantaInput","useState","newSanta","setNewSanta","onSubmit","e","preventDefault","addSanta","value","placeholder","onChange","target","maxLength","type","disabled","isSantaNameValid","EditPage","toPage","Overlay","disableOverlay","content","ResultPage","overlayContent","setOverlayContent","setAssignedVisibility","assignRecipients","recipient","Header","Utils","n","this","factorial","min","max","Math","round","random","result","Array","keys","mark","fill","D","E","i","u","j","randomInt","SecretSanta","state","page","rules","bind","new_state","setState","santaName","new_santa","Date","now","targetID","filter","assignments","derangement","newState","current_page","hasHeader","React","Component","Footer","creditOverlayContent","href","fetch","then","response","text","dangerouslySetInnerHTML","__html","marked","parse","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+bAAaA,G,MAAO,2IAEPC,EACF,EADEA,EAEH,EAFGA,EAGD,E,eCDL,SAASC,EAAUC,GAMtB,OAJAC,qBAAU,WACND,EAAME,oBACP,IAGC,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKP,EAAMQ,IAAI,SACpB,gCACI,uDACA,wBAAQC,QAASN,EAAMO,QAAvB,yB,YCbT,SAASC,EAAUR,GAStB,OACI,qBAEIG,UAAU,YACVG,QAASN,EAAMS,WAZE,WACrBT,EAAMS,WAAWT,EAAMU,QAW2B,KAHlD,UAKI,sBAAKP,UAAU,iBAAf,UACI,4BAAIH,EAAMU,MAAMC,OACdX,EAAMY,UAAY,oBAAGT,UAAU,aAAb,yBAAuCH,EAAMY,SAASD,WAE5EX,EAAMa,aAAe,wBAAQV,UAAU,gBAAgBG,QAd5C,WACjBN,EAAMa,YAAYb,EAAMU,MAAMI,KAaH,sBARlBd,EAAMU,MAAMI,ICTtB,SAASC,EAAWf,GACvB,OAAKA,EAAMgB,OAAOC,OAAS,EAEnB,oBAAId,UAAU,aAAd,SACMH,EAAMgB,OAAOE,KAAK,SAACR,GAAD,OAChB,cAACF,EAAD,CACIE,MAAOA,EACPD,WAAYT,EAAMS,WAClBI,YAAab,EAAMa,YACnBD,SAAUZ,EAAMmB,gBAAkBnB,EAAMgB,OAAON,EAAME,UAAY,YAMzE,0D,WCjBT,SAASQ,EAAWpB,GACvB,MAAgCqB,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KAaA,OACI,uBAAMpB,UAAU,aAAaqB,SARf,SAACC,GACfA,EAAEC,iBAEF1B,EAAM2B,SAASL,GACfC,EAAY,KAIZ,UACI,uBACIK,MAAON,EACPO,YAAY,uBACZC,SAhBS,SAACL,GAClBF,EAAYE,EAAEM,OAAOH,QAgBbI,UAAW,KAEf,uBAAOC,KAAK,SAASL,MAAM,MAAMM,UAAWlC,EAAMmC,iBAAiBb,QClBxE,SAASc,EAASpC,GAcrB,OACI,sBAAKG,UAAU,WAAf,UACI,cAACiB,EAAD,CAAYO,SAAU3B,EAAM2B,SAAUQ,iBAAkBnC,EAAMmC,mBAC9D,cAAC,EAAD,CAAYnB,OAAQhB,EAAMgB,OAAQH,YAAab,EAAMa,cACrD,sBAAKV,UAAU,YAAf,UACI,wBAAQG,QAdD,WACfN,EAAMqC,OAAOvC,IAaL,kBACA,wBAAQQ,QAnBE,WAClBN,EAAMqC,OAAOvC,IAkB2BoC,WAVjClC,EAAMgB,OAAOC,QAAU,GAUtB,2B,YCvBT,SAASqB,EAAQtC,GACpB,OACI,sBAAKG,UAAU,UAAf,UACI,sBAAKA,UAAU,oBAAf,UACI,wBAAQA,UAAU,oBAAoBG,QAASN,EAAMuC,eAArD,oBACEvC,EAAMwC,WAEZ,qBAAKrC,UAAU,qBAAqBG,QAASN,EAAMuC,eAAnD,kBCJL,SAASE,EAAWzC,GACvB,MAA4CqB,mBAAS,MAArD,mBAAOqB,EAAP,KAAuBC,EAAvB,KACA,EAAiDtB,oBAAS,GAA1D,mBAAOF,EAAP,KAAwByB,EAAxB,KAGA3C,qBAAU,WACND,EAAM6C,qBACP,IAwBH,OACI,sBAAK1C,UAAU,cAAf,UACI,cAAC,EAAD,CAAYa,OAAQhB,EAAMgB,OAAQP,WAZvB,SAACC,GAEhB,IAAMoC,EAAY9C,EAAMgB,OAAON,EAAME,UAErC+B,EAAkB,sBAAKxC,UAAU,iBAAf,UACd,8BAAIO,EAAMC,KAAV,OACA,qDAAuB,iCAASmC,EAAUnC,eAMgBQ,gBAAiBA,IAC3E,sBAAKhB,UAAU,YAAf,UACI,wBAAQG,QA1BD,WACfN,EAAMqC,OAAOvC,IAyBL,kBACA,wBAAQQ,QAvBD,WACfsC,GAAuBzB,IAsBf,uBACA,wBAAQb,QApBC,WACjBN,EAAMqC,OAAOvC,IAmBL,yBAEH4C,GAAkB,cAAC,EAAD,CAASF,QAASE,EAAgBH,eAAgB,kBAAMI,EAAkB,Y,MCzClG,SAASI,EAAO/C,GACnB,OACI,sBAAKG,UAAU,SAAf,UACI,qBAAKC,IAAKP,EAAMQ,IAAI,SACpB,0DCRL,IAAM2C,EAAb,8FAMI,SAAiBC,GACb,OAAQA,EAAI,EAAKC,KAAKC,UAAUF,EAAI,GAAKA,EAAI,IAPrD,uBAiBI,SAAiBG,EAAKC,GAClB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,IAAQA,IAlBzD,yBA6BI,SAAmBH,GAWf,IAVA,IAAIQ,EAAM,YAAOC,MAAMT,GAAGU,QACtBC,EAAOF,MAAMT,GAAGY,MAAK,GAEnBC,EAAI,SAACb,GAAD,OACLD,EAAMG,UAAUF,GAAK,GAAKK,KAAKS,GAGhCC,EAAIf,EACJgB,EAAIhB,EAEDgB,GAAK,GAAG,CACX,IAAKL,EAAKI,EAAE,GAAI,CACZ,GACI,IAAIE,EAAIlB,EAAMmB,UAAU,EAAGH,EAAI,SAC1BJ,EAAKM,EAAE,IAHJ,MAMiB,CAACT,EAAOS,EAAE,GAAIT,EAAOO,EAAE,IAAnDP,EAAOO,EAAE,GANE,KAMEP,EAAOS,EAAE,GANX,KAQJZ,KAAKE,UACHS,EAAI,GAAKH,EAAEG,EAAI,GAAKH,EAAEG,KAC5BL,EAAKM,EAAI,IAAK,EACdD,KAEJA,IAEJD,IAGJ,OAAOP,MA3Df,KCSaW,EAAb,kDACI,WAAYpE,GAAQ,IAAD,8BACf,cAAMA,IAEDqE,MAAQ,CACTC,KAAMxE,EACNkB,OAAQ,GACRuD,MAAO,IAGX,EAAKlC,OAAS,EAAKA,OAAOmC,KAAZ,gBACd,EAAK7C,SAAW,EAAKA,SAAS6C,KAAd,gBAChB,EAAK3D,YAAc,EAAKA,YAAY2D,KAAjB,gBACnB,EAAKtE,gBAAkB,EAAKA,gBAAgBsE,KAArB,gBACvB,EAAK3B,iBAAmB,EAAKA,iBAAiB2B,KAAtB,gBACxB,EAAKrC,iBAAmB,EAAKA,iBAAiBqC,KAAtB,gBAdT,EADvB,0CAkBI,SAAOF,GACH,IAAIG,EAAYvB,KAAKmB,MACrBI,EAAUH,KAAOA,EACjBpB,KAAKwB,SAASD,KArBtB,sBAyBI,SAASE,GACL,IAAMC,EAAY,CACd9D,GAAI+D,KAAKC,MACTnE,KAAMgE,EACN/D,SAAU,MAGV6D,EAAYvB,KAAKmB,MACrBI,EAAUzD,OAAV,sBAAwByD,EAAUzD,QAAlC,CAA0C4D,IAC1C1B,KAAKwB,SAASD,KAlCtB,8BAqCI,SAAiBE,GAEb,GAAiB,KAAdA,EACC,OAAO,EAIX,IAAI,IAAIX,EAAI,EAAGA,EAAId,KAAKmB,MAAMrD,OAAOC,OAAQ+C,IACzC,GAAGd,KAAKmB,MAAMrD,OAAOgD,GAAGrD,OAASgE,EAC7B,OAAO,EAIf,OAAO,IAlDf,yBAqDI,SAAYI,GACR,IAAIN,EAAYvB,KAAKmB,MACrBI,EAAUzD,OAASyD,EAAUzD,OAAOgE,QAAO,SAACtE,GAAD,OAAYA,EAAMI,KAAOiE,KACpE7B,KAAKwB,SAASD,KAxDtB,6BA2DI,WACI,IAAIA,EAAYvB,KAAKmB,MACrBI,EAAUzD,OAAS,GACnBkC,KAAKwB,SAASD,KA9DtB,8BAiEI,WAMI,IAJA,IAAMQ,EAAcjC,EAAMkC,YAAYhC,KAAKmB,MAAMrD,OAAOC,QAEpDkE,EAAWjC,KAAKmB,MAEXL,EAAI,EAAGA,EAAId,KAAKmB,MAAMrD,OAAOC,OAAQ+C,IAC1CmB,EAASnE,OAAOgD,GAAGpD,SAAWqE,EAAYjB,GAG9Cd,KAAKwB,SAASS,KA3EtB,oBA8EI,WAAW,IACHC,EADE,OAEFC,GAAY,EAEhB,OAAOnC,KAAKmB,MAAMC,MACd,KAAKxE,EACDsF,EACI,cAAC,EAAD,CACI7E,QAAS,WAAO,EAAK8B,OAAOvC,IAC5BI,gBAAiBgD,KAAKhD,kBAE9BmF,GAAY,EACZ,MACJ,KAAKvF,EACDsF,EACI,cAAC,EAAD,CACIpE,OAAQkC,KAAKmB,MAAMrD,OACnBW,SAAUuB,KAAKvB,SACfd,YAAaqC,KAAKrC,YAClBsB,iBAAkBe,KAAKf,iBACvBE,OAAQa,KAAKb,SAErB,MACJ,KAAKvC,EACDsF,EACI,cAAC,EAAD,CACIpE,OAAQkC,KAAKmB,MAAMrD,OACnB6B,iBAAkBK,KAAKL,iBACvBR,OAAQa,KAAKb,SAErB,MACJ,QACI+C,EAAe,uDAGvB,OACI,sBAAKjF,UAAU,cAAf,UACMkF,GAAa,cAAC,EAAD,IACbD,SApHlB,GAAiCE,IAAMC,W,cCJhC,SAASC,EAAOxF,GACnB,MAA4CqB,mBAAS,MAArD,mBAAOqB,EAAP,KAAuBC,EAAvB,KAEM8C,EAAuB,sBAAKtF,UAAU,SAAf,UACzB,wCACA,+CAAiB,mBAAGuF,KAAK,6BAAR,kDAgBrB,OACI,sBAAKvF,UAAU,SAAf,UACI,qBAAIA,UAAU,eAAd,UACI,oBAAIG,QAAS,kBAAMqC,EAAkB8C,IAArC,oBACA,oBAAInF,QAjBM,WAElBqC,EAAkB,8BACd,2CAGJgD,MALsB,sFAKDC,MACjB,SAAAC,GAAQ,OAAIA,EAASC,UACvBF,MACE,SAAAE,GAAI,OAAInD,EAAkB,qBAAKxC,UAAU,YAAY4F,wBAAyB,CAACC,OAAQC,SAAOC,MAAMJ,WAQhG,wBACA,6BAAI,mBAAGJ,KAAK,oDAAR,iCACJ,yCACA,mDAEHhD,GAAkB,cAAC,EAAD,CAASF,QAASE,EAAgBH,eAAgB,kBAAMI,EAAkB,YCtB1FwD,MATf,WACE,OACE,sBAAKhG,UAAU,MAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCISiG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c40a68b0.chunk.js","sourcesContent":["export const logo = 'https://1.bp.blogspot.com/-NtTQSOUkR9o/XVKfuVfLHcI/AAAAAAABUEA/1JsyRnHO9-8SxPb_OYm-HKAQ10dV2C45QCLcBGAs/s1600/christmas_black_santa.png';\n\nexport const PAGE = {\n    START: 0,\n    EDIT: 1,\n    RESULT: 2\n}","import React, { useEffect } from \"react\";\nimport { logo } from \"../constants\";\nimport \"./StartPage.css\";\n\nexport function StartPage(props) {\n    // Reset santas, when the start screen is loaded\n    useEffect(() => {\n        props.removeAllSantas();\n    }, []);\n\n    return (\n        <div className='Start'>\n            <img src={logo} alt=\"logo\" />\n            <div>\n                <p>Secret Santa Generator</p>\n                <button onClick={props.onStart}>Start</button>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\n\nexport function SantaCell(props) {\n    const handleShowResult = () => {\n        props.showResult(props.santa);\n    }\n\n    const handleRemove = () => {\n        props.removeSanta(props.santa.id);\n    };\n\n    return (\n        <li \n            key={props.santa.id} \n            className='SantaCell' \n            onClick={props.showResult? handleShowResult : null}\n        >\n            <div className='SantaCell-Text'>\n                <p>{props.santa.name}</p>\n                { props.assigned && <p className=\"small-font\">Assigned to {props.assigned.name}</p> }\n            </div>\n            { props.removeSanta && <button className='CellRemoveBtn' onClick={handleRemove}>✖</button> }\n        </li>\n    );\n}\n\n","import React from \"react\";\nimport './SantaTable.css';\nimport { SantaCell } from \"./SantaCell\";\n\nexport function SantaTable(props) {\n    if ( props.santas.length > 0 ) {\n        return (\n            <ul className='SantaTable'> \n                { props.santas.map( (santa) => (\n                    <SantaCell \n                        santa={santa} \n                        showResult={props.showResult} \n                        removeSanta={props.removeSanta}\n                        assigned={props.assignedVisible ? props.santas[santa.assigned] : null }\n                    />\n                ))}\n            </ul>\n        );\n    } else {\n        return (<p>There are no santa yet...</p>);\n    }\n}","import React, { useState } from \"react\";\n\nexport function SantaInput(props) {\n    const [newSanta, setNewSanta] = useState('');\n    \n    const handleChange = (e) => {\n        setNewSanta(e.target.value);\n    }\n\n    const handleAdd = (e) => {\n        e.preventDefault();\n\n        props.addSanta(newSanta);\n        setNewSanta('');　// clean the textbox\n    }\n\n    return (\n        <form className='SantaInput' onSubmit={handleAdd}>\n            <input \n                value={newSanta}\n                placeholder='Enter a name here...'\n                onChange={handleChange}\n                maxLength={20}\n            />\n            <input type=\"submit\" value=\"Add\" disabled={!props.isSantaNameValid(newSanta)} />\n        </form>\n    );\n}","import React from \"react\";\nimport './EditPage.css';\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { SantaInput } from \"./SantaInput\";\nimport { PAGE } from \"../constants\";\n\nexport function EditPage(props){\n    const handleConfirm = () => {\n        props.toPage(PAGE.RESULT);\n    };\n\n    const handleBack = () => {\n        props.toPage(PAGE.START);\n    }\n\n    const isSantaListValid = () => {\n        return props.santas.length >= 2;\n    };\n    \n\n    return (\n        <div className='EditPage'>\n            <SantaInput addSanta={props.addSanta} isSantaNameValid={props.isSantaNameValid} />\n            <SantaTable santas={props.santas} removeSanta={props.removeSanta} />\n            <div className='ButtonBar'>\n                <button onClick={handleBack}>Back</button>\n                <button onClick={handleConfirm} disabled={!isSantaListValid()}>Confirm</button>\n            </div>\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport \"./Overlay.css\";\n\nexport function Overlay(props) {\n    return (\n        <div className=\"Overlay\">\n            <div className=\"Overlay-Container\">\n                <button className='Overlay-Close-Btn' onClick={props.disableOverlay} >✖</button>\n                { props.content }\n            </div>\n            <div className=\"Overlay-Greyscreen\" onClick={props.disableOverlay}> </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport './ResultPage.css';\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { Overlay } from \"../Common/Overlay\";\nimport { PAGE } from \"../constants\";\n\nexport function ResultPage(props) {\n    const [overlayContent, setOverlayContent] = useState(null);\n    const [assignedVisible, setAssignedVisibility] = useState(false);\n\n    // Assign recipient once when the page is loaded\n    useEffect(() => {\n        props.assignRecipients();\n    }, []);\n\n    const handleBack = () => {\n        props.toPage(PAGE.EDIT);\n    }\n\n    const handleShow = () => {\n        setAssignedVisibility(!assignedVisible);\n    };\n\n    const handleFinish = () => {\n        props.toPage(PAGE.START);\n    };\n\n    const showResult = (santa) => {\n        // find recipient by array index\n        const recipient = props.santas[santa.assigned];\n\n        setOverlayContent(<div className=\"Overlay-Result\">\n            <p>{santa.name},</p>\n            <p>You are assigned to <strong>{recipient.name}</strong></p>\n        </div>);\n    }\n\n    return (\n        <div className='SantaResult'>\n            <SantaTable santas={props.santas} showResult={showResult} assignedVisible={assignedVisible}/>\n            <div className='ButtonBar'>\n                <button onClick={handleBack}>Back</button>\n                <button onClick={handleShow}>Show All!</button>\n                <button onClick={handleFinish}>Finished</button>\n            </div>\n            {overlayContent && <Overlay content={overlayContent} disableOverlay={() => setOverlayContent(null)}/>}\n        </div>\n    );\n}","import React from \"react\";\nimport './Header.css';\nimport { logo } from \"../constants\";\n\nexport function Header(props) {\n    return (\n        <div className='Header'>\n            <img src={logo} alt=\"logo\" />\n            <p>Secret Santa Generator</p>\n        </div>\n    );\n}","export class Utils {\n    /**\n     * Calculate the factorial for n\n     * \n     * @returns n!\n     */\n    static factorial(n) {\n        return (n > 1) ? this.factorial(n - 1) * n : 1;\n    }\n\n    /**\n     * Generate a random integer between range\n     * \n     * @param {int} min \n     * @param {int} max \n     * @returns a random integer between min and max \n     */\n    static randomInt(min, max) {\n        return Math.round(Math.random() * (max - min)) + min;\n    }\n\n    /**\n     * Generate a random derangement array\n     * \n     * Based on \"Generating Random Derangements\" by Martinez et. al\n     * source: https://epubs.siam.org/doi/pdf/10.1137/1.9781611972986.7\n     * @param {int} n the length of the desired derangement array\n     * @return the resulting derangement array\n     */\n    static derangement(n) {\n        let result = [...Array(n).keys()]; // init array: 0,1, 2, ...,n-1\n        let mark = Array(n).fill(false);   // init: all false\n\n        const D = (n) => (\n            (Utils.factorial(n) + 1) / Math.E\n        );\n\n        let i = n; // current index\n        let u = n; \n\n        while (u >= 2) {\n            if (!mark[i-1]) {\n                do {\n                    var j = Utils.randomInt(1, i - 1);\n                } while (mark[j-1]); // Until !mark[j]\n\n                // swap A[i] and A[j]\n                [result[i-1], result[j-1]] = [result[j-1], result[i-1]];\n\n                let p = Math.random();\n                if ( p < (u - 1) * D(u - 2) / D(u) ) {\n                    mark[j - 1] = true;\n                    u--;\n                }\n                u--;\n            }\n            i--;\n        }\n\n        return result;\n    }\n}","import React from \"react\";\nimport './SecretSanta.css';\nimport { StartPage } from \"./StartPage/StartPage\";\nimport { EditPage } from \"./EditPage/EditPage\";\nimport { ResultPage } from \"./ResultPage/ResultPage\";\nimport { Header } from \"./Common/Header\";\nimport { Utils } from \"./Utils\";\nimport { PAGE } from \"./constants\";\n\nexport class SecretSanta extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: PAGE.START,\n            santas: [],\n            rules: {}\n        }\n\n        this.toPage = this.toPage.bind(this);\n        this.addSanta = this.addSanta.bind(this);\n        this.removeSanta = this.removeSanta.bind(this);\n        this.removeAllSantas = this.removeAllSantas.bind(this);\n        this.assignRecipients = this.assignRecipients.bind(this);\n        this.isSantaNameValid = this.isSantaNameValid.bind(this);\n    }\n\n    toPage(page) {\n        let new_state = this.state;\n        new_state.page = page;\n        this.setState(new_state);\n    }\n\n    // State-related functions\n    addSanta(santaName) {\n        const new_santa = {\n            id: Date.now(),\n            name: santaName,\n            assigned: null\n        };\n        \n        let new_state = this.state;\n        new_state.santas = [ ...new_state.santas, new_santa ];\n        this.setState(new_state);\n    }\n\n    isSantaNameValid(santaName) {\n        // no empty name\n        if(santaName === '') {\n            return false;\n        }\n\n        // no repeated name\n        for(let i = 0; i < this.state.santas.length; i++) {\n            if(this.state.santas[i].name === santaName) {\n                return false;\n            }\n        }\n\n        return true\n    }\n\n    removeSanta(targetID) {\n        let new_state = this.state;\n        new_state.santas = new_state.santas.filter((santa) => (santa.id !== targetID));\n        this.setState(new_state);\n    }\n\n    removeAllSantas() {\n        let new_state = this.state;\n        new_state.santas = [];\n        this.setState(new_state);\n    }\n    \n    assignRecipients() {\n        // Generate new pattern\n        const assignments = Utils.derangement(this.state.santas.length);\n\n        let newState = this.state;\n        // Assign recipient for each santa to the 'assigned' field\n        for( let i = 0; i < this.state.santas.length; i++ ) {\n            newState.santas[i].assigned = assignments[i];\n        }\n\n        this.setState(newState);\n    }\n\n    render () {\n        let current_page;\n        let hasHeader = true;\n        \n        switch(this.state.page) {\n            case PAGE.START:\n                current_page = \n                    <StartPage \n                        onStart={() => {this.toPage(PAGE.EDIT)}}\n                        removeAllSantas={this.removeAllSantas}\n                    />;\n                hasHeader = false;\n                break;\n            case PAGE.EDIT:\n                current_page = \n                    <EditPage \n                        santas={this.state.santas}\n                        addSanta={this.addSanta}\n                        removeSanta={this.removeSanta}\n                        isSantaNameValid={this.isSantaNameValid}\n                        toPage={this.toPage}\n                    />;\n                break;\n            case PAGE.RESULT:\n                current_page =\n                    <ResultPage \n                        santas={this.state.santas}\n                        assignRecipients={this.assignRecipients}\n                        toPage={this.toPage}\n                    />\n                break;\n            default:\n                current_page = <p>Error! Page not found!</p>;\n        }\n\n        return (\n            <div className='SecretSanta'>\n                { hasHeader && <Header /> }\n                { current_page }\n            </div>\n        );\n    }\n}","import React, { useState } from 'react';\nimport { marked } from 'marked';\nimport './Footer.css';\nimport { Overlay } from './Overlay';\n\nexport function Footer(props) {\n    const [overlayContent, setOverlayContent] = useState(null);\n\n    const creditOverlayContent = <div className=\"Credit\">\n        <h1>Credit</h1>\n        <p>Illustration: <a　href=\"https://www.irasutoya.com/\">いらすとや</a></p>\n    </div>;\n    \n    const loadChangelog = () => {\n        const changelogPath = \"https://raw.githubusercontent.com/Kit2196/secret-santa-generator/main/CHANGELOG.md\";\n        setOverlayContent(<div>\n            <p>Loading</p>\n        </div>);\n\n        fetch(changelogPath).then(\n            response => response.text()\n        ).then(\n            text => setOverlayContent(<div className=\"Changelog\" dangerouslySetInnerHTML={{__html: marked.parse(text)}} />)\n        );\n    };\n\n    return (\n        <div className='Footer'>\n            <ul className='Footer-links'>\n                <li onClick={() => setOverlayContent(creditOverlayContent)}>Credit</li>\n                <li onClick={loadChangelog}>Change Log</li>\n                <li><a href='https://github.com/Kit2196/secret-santa-generator'>Github Repository</a></li>\n                <li>My page</li>\n                <li>Other projects</li>\n            </ul>\n            {overlayContent && <Overlay content={overlayContent} disableOverlay={() => setOverlayContent(null)}/>}\n        </div>\n    );\n};","import './App.css';\nimport { SecretSanta } from './SecretSanta';\nimport { Footer } from './Common/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SecretSanta />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}