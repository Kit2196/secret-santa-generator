{"version":3,"sources":["constants.js","StartPage/StartPage.js","Common/SantaTable/EditCardModal.js","Common/SantaTable/SantaCard.js","Common/SantaTable/SantaTable.js","EditPage/SantaInput.js","Utils.js","SantaGenerator.js","EditPage/EditPage.js","Common/CustomModal.js","ResultPage/ResultPage.js","Common/Header.js","Common/Footer.js","SecretSanta.js","App.js","reportWebVitals.js","index.js"],"names":["ERROR_MSG_DURATION","logo","PAGE","theme","createTheme","palette","black","main","contrastText","StartPage","props","Container","className","src","alt","ThemeProvider","Button","color","variant","onClick","onStart","EditCardModal","useState","santa","name","setName","error","setError","refConfirmBtn","useRef","useEffect","setTimeout","Modal","show","onHide","size","centered","Header","Title","Body","TextField","label","value","onChange","e","target","Footer","ref","validateName","index","newProfile","editSanta","Overlay","current","placement","transition","Tooltip","SantaCard","showEditModal","setShowEditModal","editButton","IconButton","fontSize","removeButton","removeSanta","viewButton","showResult","Card","assigned","Text","SantaTable","fluid","santas","length","Row","xs","sm","md","map","Col","assignedVisible","SantaInput","refAddBtn","Form","onSubmit","preventDefault","newSanta","addSanta","FormControl","placeholder","maxLength","type","Utils","n","this","factorial","min","max","Math","round","random","result","Array","keys","mark","fill","D","E","i","u","j","randomInt","SantaGenerator","giftable","newGiftable","numOfSanta","push","splice","a","b","assignments","isResultValid","derangement","EditPage","setSantas","setGiftable","currentIndex","validateSantaList","prev","expandGiftable","newSantaList","shrinkGiftable","toPage","updateGenerator","CustomModal","closeButton","title","content","ResultPage","showModal","setShowModal","modalTitle","setModalTitle","modalContent","setModalContent","setAssignedVisibility","handleShuffle","shuffle","recipient","Navbar","myPageClicked","setMyPageClicked","projectClicked","setProjectClicked","ButtonGroup","href","fetch","then","response","text","dangerouslySetInnerHTML","__html","marked","parse","url","window","open","SecretSanta","state","page","bind","newState","setState","new_state","loadPage","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2aa362c0.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material\";\n\nexport const ERROR_MSG_DURATION = 2500;\n\nexport const logo =\n  \"https://1.bp.blogspot.com/-NtTQSOUkR9o/XVKfuVfLHcI/AAAAAAABUEA/1JsyRnHO9-8SxPb_OYm-HKAQ10dV2C45QCLcBGAs/s1600/christmas_black_santa.png\";\n\nexport const PAGE = {\n  START: 0,\n  EDIT: 1,\n  RESULT: 2,\n};\n\nexport const theme = createTheme({\n  palette: {\n    black: {\n      main: \"#000\",\n      contrastText: \"#fff\",\n    },\n  },\n});\n","import { Button, ThemeProvider } from \"@mui/material\";\nimport React from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { logo, theme } from \"../constants\";\nimport \"./StartPage.css\";\n\nexport function StartPage(props) {\n  return (\n    <Container className=\"StartPage\">\n      <Container>\n        <img src={logo} alt=\"logo\" />\n        <div>\n          <p className=\"App-Name\">Secret Santa Generator</p>\n          <ThemeProvider theme={theme}>\n            <Button color=\"black\" variant=\"outlined\" onClick={props.onStart}>\n              Start\n            </Button>\n          </ThemeProvider>\n        </div>\n      </Container>\n    </Container>\n  );\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport { Button, TextField, ThemeProvider } from \"@mui/material\";\nimport { Modal, Overlay, Tooltip } from \"react-bootstrap\";\nimport { ERROR_MSG_DURATION, theme } from \"../../constants\";\n\nexport function EditCardModal(props) {\n  const [name, setName] = useState(props.santa.name);\n  const [error, setError] = useState(false);\n  const refConfirmBtn = useRef(null);\n\n  useEffect(() => {\n    if (error) {\n      setTimeout(() => {\n        setError(false);\n      }, ERROR_MSG_DURATION);\n    }\n  }, [error]);\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    const error = props.validateName(name, props.index);\n    setError(error);\n\n    if (!error) {\n      let newProfile = props.santa;\n      newProfile.name = name;\n\n      props.editSanta(props.index, newProfile);\n      props.onHide();\n    }\n  };\n\n  return (\n    <Modal\n      show={props.show}\n      onHide={props.onHide}\n      className=\"EditCard\"\n      size=\"lg\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title>Edit Santa Info</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <TextField label=\"Name\" value={name} onChange={handleNameChange} />\n      </Modal.Body>\n      <Modal.Footer>\n        <ThemeProvider theme={theme}>\n          <Button color=\"black\" variant=\"outlined\" onClick={props.onHide}>\n            Cancel\n          </Button>\n          <Button\n            ref={refConfirmBtn}\n            color=\"black\"\n            variant=\"outlined\"\n            onClick={handleSubmit}\n          >\n            Confirm\n          </Button>\n        </ThemeProvider>\n        <Overlay\n          target={refConfirmBtn.current}\n          show={error}\n          placement=\"top\"\n          transition={false}\n        >\n          <Tooltip>{error}</Tooltip>\n        </Overlay>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport { Card } from \"react-bootstrap\";\nimport { IconButton } from \"@mui/material\";\nimport { EditCardModal } from \"./EditCardModal\";\n\nexport function SantaCard(props) {\n  const [showEditModal, setShowEditModal] = useState(false);\n\n  const handleShowResult = () => {\n    props.showResult(props.santa);\n  };\n\n  const handleRemove = () => {\n    props.removeSanta(props.index);\n  };\n\n  const editButton = (\n    <IconButton\n      className=\"right\"\n      fontSize=\"small\"\n      onClick={() => setShowEditModal(true)}\n    >\n      <EditIcon />\n    </IconButton>\n  );\n\n  const removeButton = (\n    <IconButton className=\"right\" fontSize=\"small\" onClick={handleRemove}>\n      <DeleteIcon />\n    </IconButton>\n  );\n\n  const viewButton = (\n    <IconButton className=\"right\" fontSize=\"small\" onClick={handleShowResult}>\n      <VisibilityIcon />\n    </IconButton>\n  );\n\n  return (\n    <Card key={props.index} className=\"SantaCard\">\n      <Card.Body>\n        {props.removeSanta && removeButton}\n        {props.editSanta && editButton}\n        {props.showResult && viewButton}\n        <Card.Title>{props.santa.name}</Card.Title>\n        {props.assigned && (\n          <Card.Text>Assigned to {props.assigned.name}</Card.Text>\n        )}\n        <EditCardModal\n          index={props.index}\n          santa={props.santa}\n          show={showEditModal}\n          onHide={() => setShowEditModal(false)}\n          validateName={props.validateName}\n          editSanta={props.editSanta}\n        />\n      </Card.Body>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport \"./SantaTable.css\";\nimport { SantaCard } from \"./SantaCard\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nexport function SantaTable(props) {\n  const generateSantaCards = () => {\n    if (props.santas.length > 0) {\n      return (\n        <Row xs={2} sm={3} md={5}>\n          {props.santas.map((santa, index) => (\n            <Col>\n              <SantaCard\n                {...props}\n                index={index}\n                santa={santa}\n                assigned={\n                  props.assignedVisible ? props.santas[santa.assigned] : null\n                }\n              />\n            </Col>\n          ))}\n        </Row>\n      );\n    } else {\n      return <p>There are no santa yet...</p>;\n    }\n  };\n\n  return (\n    <Container className=\"SantaTable\" fluid>\n      {generateSantaCards()}\n    </Container>\n  );\n}\n","import { Button, ThemeProvider } from \"@mui/material\";\nimport React, { useRef, useState, useEffect } from \"react\";\nimport { Form, FormControl, Overlay, Tooltip } from \"react-bootstrap\";\nimport { theme, ERROR_MSG_DURATION } from \"../constants\";\n\nexport function SantaInput(props) {\n  const [name, setName] = useState(\"\");\n  const [error, setError] = useState(false);\n\n  const refAddBtn = useRef(null);\n\n  useEffect(() => {\n    if (error) {\n      setTimeout(() => {\n        setError(false);\n      }, ERROR_MSG_DURATION);\n    }\n  }, [error]);\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n\n    const error = props.validateName(name, -1);\n    setError(error);\n\n    if (!error) {\n      const newSanta = {\n        name: name,\n        assigned: null,\n      };\n\n      props.addSanta(newSanta);\n      setName(\"\"); // clean the textbox\n    }\n  };\n\n  return (\n    <Form className=\"SantaInput\" onSubmit={handleAdd}>\n      <FormControl\n        value={name}\n        placeholder=\"Enter a name here...\"\n        onChange={handleChange}\n        maxLength={20}\n      />\n      <ThemeProvider theme={theme}>\n        <Button\n          ref={refAddBtn}\n          color=\"black\"\n          variant=\"outlined\"\n          type=\"submit\"\n          value=\"Add\"\n        >\n          Add\n        </Button>\n      </ThemeProvider>\n      <Overlay\n        target={refAddBtn.current}\n        show={error}\n        placement=\"top\"\n        transition={false}\n      >\n        <Tooltip>{error}</Tooltip>\n      </Overlay>\n    </Form>\n  );\n}\n","export class Utils {\n  /**\n   * Calculate the factorial for n\n   *\n   * @returns n!\n   */\n  static factorial(n) {\n    return n > 1 ? this.factorial(n - 1) * n : 1;\n  }\n\n  /**\n   * Generate a random integer between range\n   *\n   * @param {int} min\n   * @param {int} max\n   * @returns a random integer between min and max\n   */\n  static randomInt(min, max) {\n    return Math.round(Math.random() * (max - min)) + min;\n  }\n\n  /**\n   * Generate a random derangement array\n   *\n   * Based on \"Generating Random Derangements\" by Martinez et. al\n   * source: https://epubs.siam.org/doi/pdf/10.1137/1.9781611972986.7\n   * @param {int} n the length of the desired derangement array\n   * @return the resulting derangement array\n   */\n  static derangement(n) {\n    let result = [...Array(n).keys()]; // init array: 0,1, 2, ...,n-1\n    let mark = Array(n).fill(false); // init: all false\n\n    const D = (n) => (Utils.factorial(n) + 1) / Math.E;\n\n    let i = n; // current index\n    let u = n;\n\n    while (u >= 2) {\n      if (!mark[i - 1]) {\n        do {\n          var j = Utils.randomInt(1, i - 1);\n        } while (mark[j - 1]); // Until !mark[j]\n\n        // swap A[i] and A[j]\n        [result[i - 1], result[j - 1]] = [result[j - 1], result[i - 1]];\n\n        let p = Math.random();\n        if (p < ((u - 1) * D(u - 2)) / D(u)) {\n          mark[j - 1] = true;\n          u--;\n        }\n        u--;\n      }\n      i--;\n    }\n\n    return result;\n  }\n}\n","import { Utils } from \"./Utils\";\n\nexport class SantaGenerator {\n  /**\n   * Expand the giftable by 1 santa\n   * @param {*} giftable the original relationship table\n   * @returns a new table representing the modified table\n   */\n  static expandGiftable(giftable) {\n    let newGiftable = giftable;\n    const numOfSanta = giftable.length + 1;\n\n    // Any existing santas can give gift to new one by default\n    for (let i = 0; i < numOfSanta - 1; i++) {\n      newGiftable[i].push(true);\n    }\n\n    // New santa can send gift to any existing santas by default\n    newGiftable.push(Array(numOfSanta).fill(true));\n\n    // New santa can not send/receive gift from himself\n    newGiftable[numOfSanta - 1][numOfSanta - 1] = false;\n\n    return newGiftable;\n  }\n\n  /**\n   * @param {*} giftable the original relationship table\n   * @param {*} index of the santa to be removed from the table\n   * @returns a new table representing the modified table\n   */\n  static shrinkGiftable(giftable, index) {\n    let newGiftable = giftable;\n\n    // Remove row\n    newGiftable.splice(index, 1);\n\n    // Remove column\n    for (let i = 0; i < newGiftable.length; i++) {\n      newGiftable[i].splice(index, 1);\n    }\n\n    return newGiftable;\n  }\n\n  /**\n   * Flip G(a,b) and G(b, a)\n   * @param {*} a index of santa (a)\n   * @param {*} b index of santa (b)\n   */\n  static flipGiftable(giftable, a, b) {\n    let newGiftable = giftable;\n    newGiftable[a][b] = !newGiftable[a][b];\n    newGiftable[b][a] = !newGiftable[b][a];\n\n    return newGiftable;\n  }\n\n  static shuffle(santas, giftable) {\n    const isResultValid = (result) => {\n      for (var i = 0; i < result.length; i++) {\n        if (i === result[i]) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    let assignments;\n\n    do {\n      // Generate new pattern\n      assignments = Utils.derangement(santas.length);\n    } while (!isResultValid(assignments));\n\n    // Assign recipient for each santa to the 'assigned' field\n    for (let i = 0; i < santas.length; i++) {\n      santas[i].assigned = assignments[i];\n    }\n\n    return [...santas];\n  }\n}\n","import React, { useState, useRef, useEffect } from \"react\";\nimport \"./EditPage.css\";\nimport { Container, Overlay, Tooltip } from \"react-bootstrap\";\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { SantaInput } from \"./SantaInput\";\nimport { PAGE, theme, ERROR_MSG_DURATION } from \"../constants\";\nimport { Button, ThemeProvider } from \"@mui/material\";\nimport { SantaGenerator } from \"../SantaGenerator\";\n\nexport function EditPage(props) {\n  const [santas, setSantas] = useState(props.santas);\n  const [giftable, setGiftable] = useState(props.giftable);\n\n  const [error, setError] = useState(false);\n  const refConfirmBtn = useRef(null);\n\n  // Name validation Error\n  const ERROR_EMPTY = \"Name cannot be empty.\";\n  const ERROR_DUPLICATE = \"Name has been entered.\";\n\n  // Santa list validation Error\n  const ERROR_NOT_ENOUGHT_CANDIDATE = \"Please enter at least 2 names.\";\n\n  useEffect(() => {\n    if (error) {\n      setTimeout(() => {\n        setError(false);\n      }, ERROR_MSG_DURATION);\n    }\n  }, [error]);\n\n  // Button handles\n  const handleBack = () => {\n    props.toPage(PAGE.START);\n  };\n\n  const handleConfirm = () => {\n    const error = validateSantaList();\n    setError(error);\n    if (!error) {\n      props.updateGenerator(santas, giftable);\n      props.toPage(PAGE.RESULT);\n    }\n  };\n\n  const addSanta = (newSanta) => {\n    setSantas((prev) => [...prev, newSanta]);\n    setGiftable(SantaGenerator.expandGiftable(giftable));\n  };\n\n  const editSanta = (index, newProfile) => {\n    let newSantaList = [...santas];\n    newSantaList[index] = newProfile;\n    setSantas(newSantaList);\n  };\n\n  const removeSanta = (index) => {\n    let newSantaList = [...santas];\n    newSantaList.splice(index, 1);\n    setSantas(newSantaList);\n    setGiftable(SantaGenerator.shrinkGiftable(giftable, index));\n  };\n\n  // Validations return error message if invalid or, otherwise, null\n  const validateName = (name, currentIndex) => {\n    if (name === \"\") {\n      return ERROR_EMPTY;\n    }\n\n    for (let i = 0; i < santas.length; i++) {\n      if (santas[i].name === name) {\n        if (i === currentIndex) {\n          break;\n        }\n        return ERROR_DUPLICATE;\n      }\n    }\n\n    return null;\n  };\n\n  const validateSantaList = () => {\n    return santas.length < 2 ? ERROR_NOT_ENOUGHT_CANDIDATE : null;\n  };\n\n  return (\n    <Container className=\"EditPage\" fluid>\n      <SantaInput addSanta={addSanta} validateName={validateName} />\n      <SantaTable\n        santas={santas}\n        giftable={giftable}\n        editSanta={editSanta}\n        removeSanta={removeSanta}\n        validateName={validateName}\n      />\n      <div className=\"ButtonBar\">\n        <ThemeProvider theme={theme}>\n          <Button color=\"black\" variant=\"outlined\" onClick={handleBack}>\n            Back\n          </Button>\n          <Button\n            ref={refConfirmBtn}\n            color=\"black\"\n            variant=\"outlined\"\n            onClick={handleConfirm}\n          >\n            Confirm\n          </Button>\n        </ThemeProvider>\n        <Overlay\n          target={refConfirmBtn.current}\n          show={error}\n          placement=\"top\"\n          transition={false}\n        >\n          <Tooltip>{error}</Tooltip>\n        </Overlay>\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport \"./CustomModal.css\";\n\nexport function CustomModal(props) {\n  return (\n    <Modal {...props} size=\"lg\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{props.content}</Modal.Body>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./ResultPage.css\";\nimport { Container } from \"react-bootstrap\";\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { CustomModal } from \"../Common/CustomModal\";\nimport { PAGE, theme } from \"../constants\";\nimport { Button, ThemeProvider } from \"@mui/material\";\nimport { SantaGenerator } from \"../SantaGenerator\";\n\nexport function ResultPage(props) {\n  const [santas, setSantas] = useState(props.santas);\n\n  const [showModal, setShowModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(null);\n  const [modalContent, setModalContent] = useState(null);\n\n  const [assignedVisible, setAssignedVisibility] = useState(false);\n\n  // Assign recipient once when the page is loaded\n  useEffect(() => {\n    handleShuffle();\n  }, []);\n\n  const handleBack = () => {\n    props.toPage(PAGE.EDIT);\n  };\n\n  const handleShuffle = () => {\n    setSantas(SantaGenerator.shuffle(santas, props.giftable));\n  };\n\n  const handleShow = () => {\n    setAssignedVisibility(!assignedVisible);\n  };\n\n  const handleFinish = () => {\n    props.toPage(PAGE.START);\n  };\n\n  const showResult = (santa) => {\n    // find recipient by array index\n    const recipient = santas[santa.assigned];\n\n    setModalTitle(<p>{santa.name}</p>);\n    setModalContent(\n      <p>\n        Your recipient is <strong>{recipient.name}</strong>!\n      </p>\n    );\n    setShowModal(true);\n  };\n\n  return (\n    <Container className=\"ResultPage\" fluid>\n      <SantaTable\n        santas={santas}\n        showResult={showResult}\n        assignedVisible={assignedVisible}\n      />\n      <div className=\"ButtonBar\">\n        <ThemeProvider theme={theme}>\n          <Button color=\"black\" variant=\"outlined\" onClick={handleBack}>\n            Back\n          </Button>\n          <Button color=\"black\" variant=\"outlined\" onClick={handleShuffle}>\n            Reshuffle!\n          </Button>\n          <Button color=\"black\" variant=\"outlined\" onClick={handleShow}>\n            Show All!\n          </Button>\n          <Button color=\"black\" variant=\"outlined\" onClick={handleFinish}>\n            Finished\n          </Button>\n        </ThemeProvider>\n      </div>\n      <CustomModal\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        title={modalTitle}\n        content={modalContent}\n      />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Container, Navbar } from \"react-bootstrap\";\nimport \"./Header.css\";\nimport { logo } from \"../constants\";\n\nexport function Header(props) {\n  return (\n    <Navbar className=\"Header\">\n      <Container className=\"justify-content-center\" fluid>\n        <img src={logo} alt=\"logo\" className=\"logo\" />\n        <p className=\"App-Name\">Secret Santa Generator</p>\n      </Container>\n    </Navbar>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport { marked } from \"marked\";\nimport \"./Footer.css\";\nimport { CustomModal } from \"./CustomModal\";\n\nconst changelogPath =\n  \"https://raw.githubusercontent.com/Kit2196/secret-santa-generator/main/CHANGELOG.md\";\n\nexport function Footer(props) {\n  const [showModal, setShowModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(null);\n  const [modalContent, setModalContent] = useState(null);\n  const [myPageClicked, setMyPageClicked] = useState(false);\n  const [projectClicked, setProjectClicked] = useState(false);\n\n  const showCredit = () => {\n    setModalTitle(\"Credit\");\n    setModalContent(\n      <p>\n        Illustration: <a href=\"https://www.irasutoya.com/\">いらすとや</a>\n      </p>\n    );\n    setShowModal(true);\n  };\n\n  const showChangeLog = () => {\n    setModalTitle(<p>Loading</p>);\n    setShowModal(true);\n\n    fetch(changelogPath)\n      .then((response) => response.text())\n      .then((text) => {\n        setModalTitle(<p>ChangeLog</p>);\n        setModalContent(\n          <div\n            className=\"Changelog\"\n            dangerouslySetInnerHTML={{ __html: marked.parse(text) }}\n          />\n        );\n      });\n  };\n\n  const openPage = (url) => window.open(url, \"_blank\");\n\n  const handleMyPage = () => {\n    setMyPageClicked(true);\n    setTimeout(() => setMyPageClicked(false), 1000);\n  };\n\n  const handleProject = () => {\n    setProjectClicked(true);\n    setTimeout(() => setProjectClicked(false), 1000);\n  };\n\n  return (\n    <Navbar className=\"Footer justify-content-center\">\n      <ButtonGroup className=\"Footer-links\">\n        <Button variant=\"link\" onClick={showCredit}>\n          Credit\n        </Button>\n        <Button variant=\"link\" onClick={showChangeLog}>\n          Change Log\n        </Button>\n        <Button\n          variant=\"link\"\n          onClick={() =>\n            openPage(\"https://github.com/Kit2196/secret-santa-generator\")\n          }\n        >\n          Github Repository\n        </Button>\n        <Button variant=\"link\" onClick={handleMyPage}>\n          {myPageClicked ? \"WIP\" : \"My page\"}\n        </Button>\n        <Button variant=\"link\" onClick={handleProject}>\n          {projectClicked ? \"WIP\" : \"Other projects\"}\n        </Button>\n      </ButtonGroup>\n      <CustomModal\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        title={modalTitle}\n        content={modalContent}\n      />\n    </Navbar>\n  );\n}\n","import React from \"react\";\nimport \"./SecretSanta.css\";\nimport { StartPage } from \"./StartPage/StartPage\";\nimport { EditPage } from \"./EditPage/EditPage\";\nimport { ResultPage } from \"./ResultPage/ResultPage\";\nimport { Header } from \"./Common/Header\";\nimport { Footer } from \"./Common/Footer\";\nimport { PAGE } from \"./constants\";\n\nexport class SecretSanta extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: PAGE.START,\n      santas: [],\n      giftable: [],\n    };\n\n    this.updateGenerator = this.updateGenerator.bind(this);\n    this.toPage = this.toPage.bind(this);\n  }\n\n  updateGenerator(santas, giftable) {\n    let newState = this.state;\n    newState.santas = santas;\n    newState.giftable = giftable;\n    this.setState(newState);\n  }\n\n  toPage(page) {\n    let new_state = this.state;\n    new_state.page = page;\n    if (page === PAGE.START) {\n      // Reset state if new page is START page\n      new_state.santas = [];\n      new_state.giftable = [];\n    }\n    this.setState(new_state);\n  }\n\n  loadPage() {\n    switch (this.state.page) {\n      case PAGE.START:\n        return (\n          <StartPage\n            onStart={() => {\n              this.toPage(PAGE.EDIT);\n            }}\n          />\n        );\n      case PAGE.EDIT:\n        return (\n          <EditPage\n            santas={this.state.santas}\n            giftable={this.state.giftable}\n            updateGenerator={this.updateGenerator}\n            toPage={this.toPage}\n          />\n        );\n      case PAGE.RESULT:\n        return (\n          <ResultPage\n            santas={this.state.santas}\n            giftable={this.state.giftable}\n            toPage={this.toPage}\n          />\n        );\n      default:\n        return <p>Error! Page not found!</p>;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"SecretSanta\">\n        {this.state.page !== PAGE.START && <Header />}\n        {this.loadPage()}\n        <Footer />\n      </div>\n    );\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { SecretSanta } from \"./SecretSanta\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SecretSanta />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}