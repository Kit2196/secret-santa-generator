{"version":3,"sources":["constants.js","StartPage/StartPage.js","Common/ErrorOverlay.js","Common/SantaTable/EditCardModal.js","Common/SantaTable/SantaCard.js","Common/SantaTable/SantaTable.js","EditPage/SantaInput.js","EditPage/EditPage.js","Common/CustomModal.js","ResultPage/ResultPage.js","Common/Header.js","Common/Footer.js","Utils.js","SantaGraph.js","SecretSanta.js","App.js","reportWebVitals.js","index.js"],"names":["logo","PAGE","theme","createTheme","palette","black","main","contrastText","StartPage","props","Container","className","src","alt","ThemeProvider","Button","color","variant","onClick","onStart","ErrorOverlay","error","errorMsg","setErrorMsg","useEffect","cleanErrorMsg","setInterval","clearInterval","Overlay","target","show","placement","Tooltip","EditCardModal","useState","santa","name","setName","refConfirmBtn","useRef","Modal","size","centered","Header","Title","Body","TextField","label","value","onChange","e","Footer","onHide","ref","validateName","index","newProfile","editSanta","current","SantaCard","showEditModal","setShowEditModal","editButton","IconButton","fontSize","removeButton","removeSanta","viewButton","showResult","Card","assigned","Text","SantaTable","fluid","santaGraph","santas","length","Row","xs","sm","md","map","Col","assignedVisible","SantaInput","refAddBtn","Form","onSubmit","preventDefault","newSanta","addSanta","FormControl","placeholder","maxLength","type","EditPage","setSantaGraph","currentIndex","i","validateSantaList","clone","removeNthSanta","toPage","updateGraph","CustomModal","closeButton","title","content","ResultPage","showModal","setShowModal","modalTitle","setModalTitle","modalContent","setModalContent","setAssignedVisibility","shuffle","recipient","Navbar","myPageClicked","setMyPageClicked","projectClicked","setprojectClicked","resetTimer","ButtonGroup","href","fetch","then","response","text","dangerouslySetInnerHTML","__html","marked","parse","url","window","open","Utils","n","this","factorial","min","max","Math","round","random","result","Array","keys","mark","fill","D","E","u","j","randomInt","SantaGraph","graph","push","splice","row","printRelationship","a","b","validateSantaPair","console","log","assignments","isResultValid","derangement","_clone","SecretSanta","state","page","bind","setState","new_state","loadPage","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1bba9795.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material\";\n\nexport const logo =\n  \"https://1.bp.blogspot.com/-NtTQSOUkR9o/XVKfuVfLHcI/AAAAAAABUEA/1JsyRnHO9-8SxPb_OYm-HKAQ10dV2C45QCLcBGAs/s1600/christmas_black_santa.png\";\n\nexport const PAGE = {\n  START: 0,\n  EDIT: 1,\n  RESULT: 2,\n};\n\nexport const theme = createTheme({\n  palette: {\n    black: {\n      main: \"#000\",\n      contrastText: \"#fff\",\n    },\n  },\n});\n","import { Button, ThemeProvider } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { logo, theme } from \"../constants\";\nimport \"./StartPage.css\";\n\nexport function StartPage(props) {\n  return (\n    <Container className=\"StartPage\">\n      <Container>\n        <img src={logo} alt=\"logo\" />\n        <div>\n          <p className=\"App-Name\">Secret Santa Generator</p>\n          <ThemeProvider theme={theme}>\n            <Button color=\"black\" variant=\"outlined\" onClick={props.onStart}>\n              Start\n            </Button>\n          </ThemeProvider>\n        </div>\n      </Container>\n    </Container>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { Overlay, Tooltip } from \"react-bootstrap\";\n\nconst cleanErrorTimer = 2000;\n\nexport function ErrorOverlay(props) {\n  const [errorMsg, setErrorMsg] = props.error;\n\n  useEffect(() => {\n    const cleanErrorMsg = setInterval(\n      () => setErrorMsg(false),\n      cleanErrorTimer\n    );\n    return () => clearInterval(cleanErrorMsg);\n  }, [errorMsg]);\n\n  return (\n    <Overlay target={props.target} show={errorMsg} placement=\"top\">\n      <Tooltip>{errorMsg}</Tooltip>\n    </Overlay>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport { Button, TextField, ThemeProvider } from \"@mui/material\";\nimport { Modal } from \"react-bootstrap\";\nimport { theme } from \"../../constants\";\nimport { ErrorOverlay } from \"../ErrorOverlay\";\n\nexport function EditCardModal(props) {\n  const [name, setName] = useState(props.santa.name);\n  const [errorMsg, setErrorMsg] = useState(false);\n  const refConfirmBtn = useRef(null);\n\n  const handleNameChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleSubmit = () => {\n    const error = props.validateName(name, props.index);\n    setErrorMsg(error);\n\n    if (!error) {\n      let newProfile = props.santa;\n      newProfile.name = name;\n\n      props.editSanta(props.index, newProfile);\n      props.onHide();\n    }\n  };\n\n  return (\n    <Modal {...props} className=\"EditCard\" size=\"lg\" centered>\n      <Modal.Header>\n        <Modal.Title>Edit Santa Info</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <TextField label=\"Name\" value={name} onChange={handleNameChange} />\n      </Modal.Body>\n      <Modal.Footer>\n        <ThemeProvider theme={theme}>\n          <Button color=\"black\" variant=\"outlined\" onClick={props.onHide}>\n            Cancel\n          </Button>\n          <Button\n            ref={refConfirmBtn}\n            color=\"black\"\n            variant=\"outlined\"\n            onClick={handleSubmit}\n          >\n            Confirm\n          </Button>\n        </ThemeProvider>\n        <ErrorOverlay\n          target={refConfirmBtn.current}\n          error={[errorMsg, setErrorMsg]}\n        />\n      </Modal.Footer>\n    </Modal>\n  );\n}\n","import React, { useState } from \"react\";\nimport EditIcon from \"@mui/icons-material/Edit\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\nimport { Card } from \"react-bootstrap\";\nimport { IconButton } from \"@mui/material\";\nimport { EditCardModal } from \"./EditCardModal\";\n\nexport function SantaCard(props) {\n  const [showEditModal, setShowEditModal] = useState(false);\n  const handleShowResult = () => {\n    props.showResult(props.santa);\n  };\n\n  const handleRemove = () => {\n    props.removeSanta(props.index);\n  };\n\n  const editButton = (\n    <IconButton\n      className=\"right\"\n      fontSize=\"small\"\n      onClick={() => setShowEditModal(true)}\n    >\n      <EditIcon />\n    </IconButton>\n  );\n\n  const removeButton = (\n    <IconButton className=\"right\" fontSize=\"small\" onClick={handleRemove}>\n      <DeleteIcon />\n    </IconButton>\n  );\n\n  const viewButton = (\n    <IconButton className=\"right\" fontSize=\"small\" onClick={handleShowResult}>\n      <VisibilityIcon />\n    </IconButton>\n  );\n\n  return (\n    <Card key={props.index} className=\"SantaCard\">\n      <Card.Body>\n        {props.removeSanta && removeButton}\n        {props.editSanta && editButton}\n        {props.showResult && viewButton}\n        <Card.Title>{props.santa.name}</Card.Title>\n        {props.assigned && (\n          <Card.Text>Assigned to {props.assigned.name}</Card.Text>\n        )}\n        <EditCardModal\n          {...props}\n          show={showEditModal}\n          onHide={() => setShowEditModal(false)}\n        />\n      </Card.Body>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport \"./SantaTable.css\";\nimport { SantaCard } from \"./SantaCard\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nexport function SantaTable(props) {\n  const generateSantaCards = () => {\n    if (props.santaGraph.santas.length > 0) {\n      return (\n        <Row xs={2} sm={3} md={5}>\n          {props.santaGraph.santas.map((santa, index) => (\n            <Col>\n              <SantaCard\n                {...props}\n                index={index}\n                santa={santa}\n                assigned={\n                  props.assignedVisible\n                    ? props.santaGraph.santas[santa.assigned]\n                    : null\n                }\n              />\n            </Col>\n          ))}\n        </Row>\n      );\n    } else {\n      return <p>There are no santa yet...</p>;\n    }\n  };\n\n  return (\n    <Container className=\"SantaTable\" fluid>\n      {generateSantaCards()}\n    </Container>\n  );\n}\n","import { Button, ThemeProvider } from \"@mui/material\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, FormControl } from \"react-bootstrap\";\nimport { ErrorOverlay } from \"../Common/ErrorOverlay\";\nimport { theme } from \"../constants\";\n\nexport function SantaInput(props) {\n  const [name, setName] = useState(\"\");\n  const [errorMsg, setErrorMsg] = useState(false);\n\n  const refAddBtn = useRef(null);\n\n  const handleChange = (e) => {\n    setName(e.target.value);\n  };\n\n  const handleAdd = (e) => {\n    e.preventDefault();\n\n    const error = props.validateName(name, -1);\n    setErrorMsg(error);\n\n    if (!error) {\n      const newSanta = {\n        name: name,\n        assigned: null,\n      };\n\n      props.addSanta(newSanta);\n      setName(\"\"); // clean the textbox\n    }\n  };\n\n  return (\n    <Form className=\"SantaInput\" onSubmit={handleAdd}>\n      <FormControl\n        value={name}\n        placeholder=\"Enter a name here...\"\n        onChange={handleChange}\n        maxLength={20}\n      />\n      <ThemeProvider theme={theme}>\n        <Button\n          ref={refAddBtn}\n          color=\"black\"\n          variant=\"outlined\"\n          type=\"submit\"\n          value=\"Add\"\n        >\n          Add\n        </Button>\n      </ThemeProvider>\n      <ErrorOverlay\n        target={refAddBtn.current}\n        error={[errorMsg, setErrorMsg]}\n      />\n    </Form>\n  );\n}\n","import React, { useState, useRef } from \"react\";\nimport \"./EditPage.css\";\nimport { Container } from \"react-bootstrap\";\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { SantaInput } from \"./SantaInput\";\nimport { PAGE, theme } from \"../constants\";\nimport { ErrorOverlay } from \"../Common/ErrorOverlay\";\nimport { Button, ThemeProvider } from \"@mui/material\";\n\nexport function EditPage(props) {\n  const [santaGraph, setSantaGraph] = useState(props.santaGraph);\n  const [errorMsg, setErrorMsg] = useState(false);\n  const refConfirmBtn = useRef(null);\n\n  // Name validation Error\n  const ERROR_EMPTY = \"Name cannot be empty.\";\n  const ERROR_DUPLICATE = \"Name has been entered.\";\n\n  // Santa list validation Error\n  const ERROR_NOT_ENOUGHT_CANDIDATE = \"Please enter at least 2 names.\";\n\n  // Button handles\n  const handleBack = () => {\n    props.toPage(PAGE.START);\n  };\n\n  const handleConfirm = () => {\n    const error = validateSantaList();\n    setErrorMsg(error);\n    if (!error) {\n      props.updateGraph(santaGraph);\n      props.toPage(PAGE.RESULT);\n    }\n  };\n\n  const addSanta = (newSanta) => {\n    santaGraph.addSanta(newSanta);\n    setSantaGraph(santaGraph.clone());\n  };\n\n  const editSanta = (index, newProfile) => {\n    santaGraph.santas[index] = newProfile;\n    setSantaGraph(santaGraph.clone());\n  };\n\n  const removeSanta = (index) => {\n    santaGraph.removeNthSanta(index + 1);\n    setSantaGraph(santaGraph.clone());\n  };\n\n  // Validations return error message if invalid or, otherwise, null\n  const validateName = (name, currentIndex) => {\n    if (name === \"\") {\n      return ERROR_EMPTY;\n    }\n\n    for (let i = 0; i < santaGraph.santas.length; i++) {\n      if (santaGraph.santas[i].name === name) {\n        if (i == currentIndex) {\n          break;\n        }\n        return ERROR_DUPLICATE;\n      }\n    }\n\n    return null;\n  };\n\n  const validateSantaList = () => {\n    if (santaGraph.santas.length < 2) {\n      return ERROR_NOT_ENOUGHT_CANDIDATE;\n    } else {\n      return null;\n    }\n  };\n\n  return (\n    <Container className=\"EditPage\" fluid>\n      <SantaInput addSanta={addSanta} validateName={validateName} />\n      <SantaTable\n        santaGraph={santaGraph}\n        editSanta={editSanta}\n        removeSanta={removeSanta}\n        validateName={validateName}\n      />\n      <div className=\"ButtonBar\">\n        <ThemeProvider theme={theme}>\n          <Button color=\"black\" variant=\"outlined\" onClick={handleBack}>\n            Back\n          </Button>\n          <Button\n            ref={refConfirmBtn}\n            color=\"black\"\n            variant=\"outlined\"\n            onClick={handleConfirm}\n          >\n            Confirm\n          </Button>\n        </ThemeProvider>\n        <ErrorOverlay\n          target={refConfirmBtn.current}\n          error={[errorMsg, setErrorMsg]}\n        />\n      </div>\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport \"./CustomModal.css\";\n\nexport function CustomModal(props) {\n  return (\n    <Modal {...props} size=\"lg\" centered>\n      <Modal.Header closeButton>\n        <Modal.Title>{props.title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>{props.content}</Modal.Body>\n    </Modal>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport \"./ResultPage.css\";\nimport { Container } from \"react-bootstrap\";\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { CustomModal } from \"../Common/CustomModal\";\nimport { PAGE, theme } from \"../constants\";\nimport { Button, ThemeProvider } from \"@mui/material\";\n\nexport function ResultPage(props) {\n  const [santaGraph, setSantaGraph] = useState(props.santaGraph);\n\n  const [showModal, setShowModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(null);\n  const [modalContent, setModalContent] = useState(null);\n\n  const [assignedVisible, setAssignedVisibility] = useState(false);\n\n  // Assign recipient once when the page is loaded\n  useEffect(() => {\n    santaGraph.shuffle();\n    setSantaGraph(santaGraph.clone());\n  }, []);\n\n  const handleBack = () => {\n    props.toPage(PAGE.EDIT);\n  };\n\n  const handleShuffle = () => {\n    santaGraph.shuffle();\n    setSantaGraph(santaGraph.clone());\n  };\n\n  const handleShow = () => {\n    setAssignedVisibility(!assignedVisible);\n  };\n\n  const handleFinish = () => {\n    props.toPage(PAGE.START);\n  };\n\n  const showResult = (santa) => {\n    // find recipient by array index\n    const recipient = props.santaGraph.santas[santa.assigned];\n\n    setModalTitle(<p>{santa.name}</p>);\n    setModalContent(\n      <p>\n        Your recipient is <strong>{recipient.name}</strong>!\n      </p>\n    );\n    setShowModal(true);\n  };\n\n  return (\n    <Container className=\"ResultPage\" fluid>\n      <SantaTable\n        santaGraph={santaGraph}\n        showResult={showResult}\n        assignedVisible={assignedVisible}\n      />\n      <div className=\"ButtonBar\">\n        <ThemeProvider theme={theme}>\n          <Button color=\"black\" variant=\"outlined\" onClick={handleBack}>\n            Back\n          </Button>\n          <Button color=\"black\" variant=\"outlined\" onClick={handleShuffle}>\n            Reshuffle!\n          </Button>\n          <Button color=\"black\" variant=\"outlined\" onClick={handleShow}>\n            Show All!\n          </Button>\n          <Button color=\"black\" variant=\"outlined\" onClick={handleFinish}>\n            Finished\n          </Button>\n        </ThemeProvider>\n      </div>\n      <CustomModal\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        title={modalTitle}\n        content={modalContent}\n      />\n    </Container>\n  );\n}\n","import React from \"react\";\nimport { Container, Navbar } from \"react-bootstrap\";\nimport \"./Header.css\";\nimport { logo } from \"../constants\";\n\nexport function Header(props) {\n  return (\n    <Navbar className=\"Header\">\n      <Container className=\"justify-content-center\" fluid>\n        <img src={logo} alt=\"logo\" className=\"logo\" />\n        <p className=\"App-Name\">Secret Santa Generator</p>\n      </Container>\n    </Navbar>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Button, ButtonGroup, Navbar } from \"react-bootstrap\";\nimport { marked } from \"marked\";\nimport \"./Footer.css\";\nimport { CustomModal } from \"./CustomModal\";\n\nconst changelogPath =\n  \"https://raw.githubusercontent.com/Kit2196/secret-santa-generator/main/CHANGELOG.md\";\n\nexport function Footer(props) {\n  const [showModal, setShowModal] = useState(false);\n  const [modalTitle, setModalTitle] = useState(null);\n  const [modalContent, setModalContent] = useState(null);\n  const [myPageClicked, setMyPageClicked] = useState(false);\n  const [projectClicked, setprojectClicked] = useState(false);\n\n  useEffect(() => {\n    const resetTimer = setInterval(() => setMyPageClicked(false), 1000);\n    return () => clearInterval(resetTimer);\n  }, [myPageClicked]);\n\n  useEffect(() => {\n    const resetTimer = setInterval(() => setprojectClicked(false), 1000);\n    return () => clearInterval(resetTimer);\n  }, [projectClicked]);\n\n  const showCredit = () => {\n    setModalTitle(\"Credit\");\n    setModalContent(\n      <p>\n        Illustration: <a href=\"https://www.irasutoya.com/\">いらすとや</a>\n      </p>\n    );\n    setShowModal(true);\n  };\n\n  const showChangeLog = () => {\n    setModalTitle(<p>Loading</p>);\n    setShowModal(true);\n\n    fetch(changelogPath)\n      .then((response) => response.text())\n      .then((text) => {\n        setModalTitle(<p>ChangeLog</p>);\n        setModalContent(\n          <div\n            className=\"Changelog\"\n            dangerouslySetInnerHTML={{ __html: marked.parse(text) }}\n          />\n        );\n      });\n  };\n\n  const openPage = (url) => window.open(url, \"_blank\");\n\n  return (\n    <Navbar className=\"Footer justify-content-center\">\n      <ButtonGroup className=\"Footer-links\">\n        <Button variant=\"link\" onClick={showCredit}>\n          Credit\n        </Button>\n        <Button variant=\"link\" onClick={showChangeLog}>\n          Change Log\n        </Button>\n        <Button\n          variant=\"link\"\n          onClick={() =>\n            openPage(\"https://github.com/Kit2196/secret-santa-generator\")\n          }\n        >\n          Github Repository\n        </Button>\n        <Button variant=\"link\" onClick={() => setMyPageClicked(true)}>\n          {myPageClicked ? \"WIP\" : \"My page\"}\n        </Button>\n        <Button variant=\"link\" onClick={() => setprojectClicked(true)}>\n          {projectClicked ? \"WIP\" : \"Other projects\"}\n        </Button>\n      </ButtonGroup>\n      <CustomModal\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        title={modalTitle}\n        content={modalContent}\n      />\n    </Navbar>\n  );\n}\n","export class Utils {\n  /**\n   * Calculate the factorial for n\n   *\n   * @returns n!\n   */\n  static factorial(n) {\n    return n > 1 ? this.factorial(n - 1) * n : 1;\n  }\n\n  /**\n   * Generate a random integer between range\n   *\n   * @param {int} min\n   * @param {int} max\n   * @returns a random integer between min and max\n   */\n  static randomInt(min, max) {\n    return Math.round(Math.random() * (max - min)) + min;\n  }\n\n  /**\n   * Generate a random derangement array\n   *\n   * Based on \"Generating Random Derangements\" by Martinez et. al\n   * source: https://epubs.siam.org/doi/pdf/10.1137/1.9781611972986.7\n   * @param {int} n the length of the desired derangement array\n   * @return the resulting derangement array\n   */\n  static derangement(n) {\n    let result = [...Array(n).keys()]; // init array: 0,1, 2, ...,n-1\n    let mark = Array(n).fill(false); // init: all false\n\n    const D = (n) => (Utils.factorial(n) + 1) / Math.E;\n\n    let i = n; // current index\n    let u = n;\n\n    while (u >= 2) {\n      if (!mark[i - 1]) {\n        do {\n          var j = Utils.randomInt(1, i - 1);\n        } while (mark[j - 1]); // Until !mark[j]\n\n        // swap A[i] and A[j]\n        [result[i - 1], result[j - 1]] = [result[j - 1], result[i - 1]];\n\n        let p = Math.random();\n        if (p < ((u - 1) * D(u - 2)) / D(u)) {\n          mark[j - 1] = true;\n          u--;\n        }\n        u--;\n      }\n      i--;\n    }\n\n    return result;\n  }\n}\n","import { Utils } from \"./Utils\";\n\nexport class SantaGraph {\n  constructor() {\n    this.santas = [];\n    this.graph = [];\n  }\n\n  /**\n   *\n   */\n  addSanta(santa) {\n    this.santas.push(santa);\n\n    if (this.santas.length > 1) {\n      this.graph.push([]);\n      for (let i = 0; i < this.graph.length; i++) {\n        this.graph[i].push(true);\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {*} n\n   */\n  removeNthSanta(n) {\n    if (n > this.santas.length || 1 > n) {\n      throw \"Out of bound\";\n    } else {\n      const i = n - 1;\n      this.santas.splice(i, 1);\n      for (let row = 0; row < this.santas.length; row++) {\n        if (row === i) {\n          // remove whole row when the whole row belongs to nth Santa\n          this.graph.splice(row, 1);\n          break;\n        } else {\n          // remove the cell belong to nth Santa when row number is smaller than n\n          this.graph[row].splice(i - row - 1, 1);\n        }\n      }\n    }\n    this.printRelationship();\n  }\n\n  removeAllSanta() {\n    this.santas = [];\n    this.graph = [[]];\n  }\n\n  /**\n   * Return the boolean value from the replationship graph\n   * @param {*} a\n   * @param {*} b\n   * @returns\n   */\n  isConnected(a, b) {\n    [a, b] = this.validateSantaPair(a, b);\n    return this.graph[a - 1][b - a - 1];\n  }\n\n  toggleConnection(a, b) {\n    [a, b] = this.validateSantaPair(a, b);\n    this.graph[a - 1][b - a - 1] = !this.graph[a - 1][b - a - 1];\n\n    console.log([a, b]);\n    this.printRelationship();\n  }\n\n  shuffle() {\n    const isResultValid = (result) => {\n      for (var i = 0; i < result.length; i++) {\n        if (i === result[i]) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    let assignments;\n\n    do {\n      // Generate new pattern\n      assignments = Utils.derangement(this.santas.length);\n    } while (!isResultValid(assignments));\n\n    // Assign recipient for each santa to the 'assigned' field\n    for (let i = 0; i < this.santas.length; i++) {\n      this.santas[i].assigned = assignments[i];\n    }\n  }\n\n  validateSantaPair(a, b) {\n    if (a === b) {\n      throw \"Error! Trying to look up the same santa\";\n    } else if (\n      a > this.santas.length ||\n      b > this.santas.length ||\n      a < 1 ||\n      b < 1\n    ) {\n      throw \"Error! Out of bound\";\n    } else if (a > b) {\n      return [b, a];\n    } else {\n      return [a, b];\n    }\n  }\n\n  printRelationship() {\n    for (let row = 0; row < this.santas.length; row++) {\n      console.log(this.graph[row]);\n    }\n  }\n\n  clone() {\n    const _clone = new SantaGraph();\n    _clone.santas = this.santas;\n    _clone.graph = this.graph;\n\n    return _clone;\n  }\n}\n","import React from \"react\";\nimport \"./SecretSanta.css\";\nimport { StartPage } from \"./StartPage/StartPage\";\nimport { EditPage } from \"./EditPage/EditPage\";\nimport { ResultPage } from \"./ResultPage/ResultPage\";\nimport { Header } from \"./Common/Header\";\nimport { Footer } from \"./Common/Footer\";\nimport { Utils } from \"./Utils\";\nimport { PAGE } from \"./constants\";\nimport { SantaGraph } from \"./SantaGraph\";\n\nwindow.SantaGraph = SantaGraph;\nexport class SecretSanta extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      page: PAGE.START,\n      santaGraph: new SantaGraph(),\n    };\n\n    this.updateGraph = this.updateGraph.bind(this);\n    this.toPage = this.toPage.bind(this);\n  }\n\n  updateGraph(graph) {\n    this.setState({ page: this.state.page, santaGraph: graph });\n  }\n\n  toPage(page) {\n    let new_state = this.state;\n    new_state.page = page;\n    if (page === PAGE.START) {\n      new_state.santaGraph = new SantaGraph();\n    }\n    this.setState(new_state);\n  }\n\n  loadPage() {\n    switch (this.state.page) {\n      case PAGE.START:\n        return (\n          <StartPage\n            onStart={() => {\n              this.toPage(PAGE.EDIT);\n            }}\n          />\n        );\n      case PAGE.EDIT:\n        return (\n          <EditPage\n            santaGraph={this.state.santaGraph}\n            updateGraph={this.updateGraph}\n            toPage={this.toPage}\n          />\n        );\n      case PAGE.RESULT:\n        return (\n          <ResultPage santaGraph={this.state.santaGraph} toPage={this.toPage} />\n        );\n      default:\n        return <p>Error! Page not found!</p>;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"SecretSanta\">\n        {this.state.page !== PAGE.START && <Header />}\n        {this.loadPage()}\n        <Footer />\n      </div>\n    );\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport { SecretSanta } from \"./SecretSanta\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SecretSanta />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}