{"version":3,"sources":["constants.js","StartPage/StartPage.js","EditPage/SantaCell.js","EditPage/SantaTable.js","EditPage/SantaInput.js","EditPage/EditPage.js","Common/Header.js","ResultPage/ResultPage.js","Common/PageControl.js","SecretSanta.js","Common/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["logo","StartPage","props","className","src","alt","onClick","onStart","SantaCell","santa","name","removeSanta","id","SantaTable","santas","length","map","SantaInput","useState","newSanta","setNewSanta","onSubmit","e","preventDefault","addSanta","value","placeholder","onChange","target","type","EditPage","Header","ResultPage","React","Component","PageControl","buttons","button","action","text","enabled","disabled","PAGE","SecretSanta","state","page","rules","toPage","bind","new_state","this","setState","santaName","new_santa","Date","now","targetID","filter","current_page","hasHeader","hasPageControl","Footer","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.017b8342.chunk.js","sourcesContent":["export const logo = 'https://1.bp.blogspot.com/-NtTQSOUkR9o/XVKfuVfLHcI/AAAAAAABUEA/1JsyRnHO9-8SxPb_OYm-HKAQ10dV2C45QCLcBGAs/s1600/christmas_black_santa.png';\n","import React from \"react\";\nimport { logo } from \"../constants\";\nimport \"./StartPage.css\";\n\nexport function StartPage(props) {\n    return (\n        <div className='Start'>\n            <img src={logo} alt=\"logo\" />\n            <div>\n                <p>Secret Santa Generator</p>\n                <button onClick={props.onStart}>Start</button>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\n\nexport function SantaCell(props) {\n    const handleRemove = () => {\n        props.removeSanta(props.santa.id);\n    };\n\n    return (\n        <li className='SantaCell'>\n            <p>{props.santa.name}</p>\n            <button className='CellRemoveBtn' onClick={handleRemove}>âœ–</button>\n        </li>\n    );\n}\n\n","import React from \"react\";\nimport { SantaCell } from \"./SantaCell\";\n\nexport function SantaTable(props) {\n    if ( props.santas.length > 0 ) {\n        return (\n            <ul className='SantaTable'> {\n                props.santas.map( \n                    (santa) => (\n                        <SantaCell santa={santa} removeSanta={props.removeSanta}/>\n                    )\n                )\n            }</ul>\n        );\n    } else {\n        return (<p>There are no santa yet...</p>);\n    }\n}","import React, { useState } from \"react\";\n\nexport function SantaInput(props) {\n    const [newSanta, setNewSanta] = useState('');\n    \n    const handleChange = (e) => {\n        setNewSanta(e.target.value);\n    }\n\n    const handleAdd = (e) => {\n        e.preventDefault();\n        if (newSanta !== '') {\n            props.addSanta(newSanta);\n            setNewSanta('');\n        }\n    }\n\n    return (\n        <form className='SantaInput' onSubmit={handleAdd}>\n            <input \n                value={newSanta}\n                placeholder='Enter a name here...'\n                onChange={handleChange}\n            />\n            <input type=\"submit\" value=\"Add\" />\n        </form>\n    );\n}","import React from \"react\";\nimport './EditPage.css';\nimport { SantaTable } from \"./SantaTable\";\nimport { SantaInput } from \"./SantaInput\";\n\nexport function EditPage(props){\n    return (\n        <div className='EditPage'>\n            <SantaInput addSanta={props.addSanta} />\n            <SantaTable santas={props.santas} removeSanta={props.removeSanta} />\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport './Header.css';\nimport { logo } from \"../constants\";\n\nexport function Header(props) {\n    return (\n        <div className='Header'>\n            <img src={logo} alt=\"logo\" />\n            <p>Secret Santa Generator</p>\n        </div>\n    );\n}","import React from \"react\";\nimport './ResultPage.css';\nimport { Header } from \"../Common/Header\";\n\nexport class ResultPage extends React.Component {\n    render() {\n        return (\n            <div className='SantaResult'>\n                <Header />\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport './PageControl.css';\n\nexport function PageControl(props) {\n    return (\n        <div className='PageControl'>\n            {\n                props.buttons.map((button) => {\n                    const [action, text, enabled] = button;\n\n                    return (\n                        <button onClick={action} disabled={!enabled}>\n                            {text}\n                        </button>\n                    );\n                })\n            }\n        </div>\n    );\n}","import React from \"react\";\nimport './SecretSanta.css';\nimport { StartPage } from \"./StartPage/StartPage\";\nimport { EditPage } from \"./EditPage/EditPage\";\nimport { ResultPage } from \"./ResultPage/ResultPage\";\nimport { PageControl } from \"./Common/PageControl\";\nimport { Header } from \"./Common/Header\";\n\nconst PAGE = {\n    START: 0,\n    EDIT: 1,\n    RESULT: 2\n}\n\nexport class SecretSanta extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: PAGE.START,\n            santas: [],\n            rules: {}\n        }\n\n        this.toPage = this.toPage.bind(this);\n        this.addSanta = this.addSanta.bind(this);\n        this.removeSanta = this.removeSanta.bind(this);\n    }\n\n    toPage(page) {\n        let new_state = this.state;\n        new_state.page = page;\n        this.setState(new_state);\n    }\n\n    addSanta(santaName) {\n        const new_santa = {\n            id: Date.now(),\n            name: santaName\n        };\n        \n        let new_state = this.state;\n        new_state.santas = [ ...new_state.santas, new_santa ];\n        this.setState(new_state);\n    }\n\n    removeSanta(targetID) {\n        let new_state = this.state;\n        new_state.santas = new_state.santas.filter((santa) => (santa.id !== targetID));\n        this.setState(new_state);\n    }\n\n    render () {\n        let current_page;\n        let hasHeader = true;\n        let hasPageControl = true;\n        let buttons;\n        \n        switch(this.state.page) {\n            case PAGE.START:\n                current_page = <StartPage onStart={() => {this.toPage(PAGE.EDIT)}}/>;\n                hasHeader = false;\n                hasPageControl = false;\n                break;\n            case PAGE.EDIT:\n                current_page = \n                    <EditPage \n                        santas={this.state.santas}\n                        addSanta={this.addSanta}\n                        removeSanta={this.removeSanta}\n                    />;\n                buttons = [\n                    [() => this.toPage(PAGE.START), 'Back', true],\n                    [() => this.toPage(PAGE.RESULT), 'Confirm', true]\n                ];\n                break;\n            case PAGE.RESULT:\n                current_page =\n                    <ResultPage />\n                buttons = [\n                    [() => this.toPage(PAGE.EDIT), 'Back', true],\n                    [() => this.toPage(PAGE.START), 'Finish', true]\n                ];\n                break;\n            default:\n                current_page = <p>Error! Page not found!</p>;\n        }\n\n        return (\n            <div className='SecretSanta'>\n                { hasHeader && <Header /> }\n                { current_page }\n                { \n                    hasPageControl && \n                    <PageControl \n                        buttons={buttons}\n                    />\n                }\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Footer.css';\n\nexport function Footer(props) {\n    return (\n        <div className='Footer'>\n            <ul className='Footer-links'>\n                <li><a href=''>Credit</a></li>\n                <li><a href=''>Change Log</a></li>\n                <li><a href='https://github.com/Kit2196/secret-santa-generator'>Github Repository</a></li>\n                <li><a href=''>My page</a></li>\n                <li><a href=''>Other projects</a></li>\n            </ul>\n        </div>\n    );\n};","import './App.css';\nimport { SecretSanta } from './SecretSanta';\nimport { Footer } from './Common/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SecretSanta />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}