{"version":3,"sources":["constants.js","StartPage/StartPage.js","Common/ErrorOverlay.js","Common/SantaTable/EditCardModal.js","Common/SantaTable/SantaCard.js","Common/SantaTable/SantaTable.js","EditPage/SantaInput.js","EditPage/EditPage.js","Common/CustomModal.js","ResultPage/ResultPage.js","Common/Header.js","Common/Footer.js","Utils.js","SecretSanta.js","App.js","reportWebVitals.js","index.js"],"names":["logo","PAGE","theme","createTheme","palette","black","main","contrastText","StartPage","props","useEffect","removeAllSantas","Container","className","src","alt","ThemeProvider","Button","color","variant","onClick","onStart","ErrorOverlay","error","errorMsg","setErrorMsg","cleanErrorMsg","setInterval","clearInterval","Overlay","target","show","placement","Tooltip","EditCardModal","useState","santa","name","setName","refConfirmBtn","useRef","Modal","size","centered","Header","Title","Body","TextField","label","value","onChange","e","Footer","onHide","ref","validateName","newProfile","editSanta","id","current","SantaCard","showEditModal","setShowEditModal","editButton","IconButton","fontSize","removeButton","removeSanta","Card","showResult","assigned","Text","SantaTable","fluid","santas","length","Row","xs","sm","md","map","Col","assignedVisible","SantaInput","newName","setNewName","refAddBtn","Form","onSubmit","preventDefault","addSanta","FormControl","placeholder","maxLength","type","EditPage","checkDuplication","i","validateSantaList","toPage","CustomModal","closeButton","title","content","ResultPage","showModal","setShowModal","modalTitle","setModalTitle","modalContent","setModalContent","setAssignedVisibility","assignRecipients","recipient","Navbar","myPageClicked","setMyPageClicked","projectClicked","setprojectClicked","resetTimer","ButtonGroup","href","fetch","then","response","text","dangerouslySetInnerHTML","__html","marked","parse","url","window","open","Utils","n","this","factorial","min","max","Math","round","random","result","Array","keys","mark","fill","D","E","u","j","randomInt","SecretSanta","state","page","rules","bind","new_state","setState","santaName","new_santa","Date","now","targetId","targetID","filter","assignments","isResultValid","derangement","newState","loadPage","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8b520bf3.chunk.js","sourcesContent":["import { createTheme } from \"@mui/material\";\n\nexport const logo = 'https://1.bp.blogspot.com/-NtTQSOUkR9o/XVKfuVfLHcI/AAAAAAABUEA/1JsyRnHO9-8SxPb_OYm-HKAQ10dV2C45QCLcBGAs/s1600/christmas_black_santa.png';\n\nexport const PAGE = {\n    START: 0,\n    EDIT: 1,\n    RESULT: 2\n}\n\nexport const theme = createTheme({\n    palette: {\n        black: {\n            main: '#000',\n            contrastText: '#fff',\n        },\n    },\n});","import { Button, ThemeProvider } from \"@mui/material\";\nimport React, { useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport { logo, theme } from \"../constants\";\nimport \"./StartPage.css\";\n\nexport function StartPage(props) {\n    // Reset santas, when the start screen is loaded\n    useEffect(() => {\n        props.removeAllSantas();\n    }, []);\n\n    return (\n        <Container className='StartPage'>\n            <Container>\n                <img src={logo} alt=\"logo\" />\n                <div>\n                    <p className=\"App-Name\">Secret Santa Generator</p>\n                    <ThemeProvider theme={theme}>\n                        <Button color=\"black\" variant=\"outlined\" onClick={props.onStart}>Start</Button>\n                    </ThemeProvider>\n                </div>\n            </Container>\n        </Container>\n    );\n}","import React, { useEffect } from \"react\";\nimport { Overlay, Tooltip } from \"react-bootstrap\";\n\nconst cleanErrorTimer = 2000;\n\nexport function ErrorOverlay(props) {\n    const [errorMsg, setErrorMsg] = props.error;\n    \n    useEffect(() => {\n        const cleanErrorMsg = setInterval(() => (\n          setErrorMsg(false)\n        ), cleanErrorTimer);\n        return () => clearInterval(cleanErrorMsg); \n    }, [errorMsg]);\n\n    return (\n        <Overlay target={props.target} show={errorMsg} placement=\"top\">\n            <Tooltip>{errorMsg}</Tooltip>\n        </Overlay>\n    );\n}","import React, { useState, useRef } from \"react\";\nimport { Button, TextField, ThemeProvider } from \"@mui/material\";\nimport { Modal } from \"react-bootstrap\";\nimport { theme } from \"../../constants\";\nimport { ErrorOverlay } from \"../ErrorOverlay\";\n\nexport function EditCardModal(props) {\n    const [name, setName] = useState(props.santa.name);\n    const [errorMsg, setErrorMsg] = useState(false);\n    const refConfirmBtn = useRef(null);\n\n    const handleNameChange = (e) => {\n        setName(e.target.value);\n    }\n\n    const handleSubmit = () => {\n        const error = props.validateName(name, false);\n        setErrorMsg(error);\n\n        if (!error) {\n            let newProfile = props.santa;\n            newProfile.name = name;\n\n            props.editSanta(props.santa.id, newProfile);\n            props.onHide();\n        }\n    };\n\n    return (\n        <Modal\n            {...props}\n            className=\"EditCard\"\n            size=\"lg\"\n            centered\n        >\n            <Modal.Header>\n                <Modal.Title>Edit Santa Info</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <TextField label=\"Name\" value={name} onChange={handleNameChange} />\n            </Modal.Body>\n            <Modal.Footer>\n                <ThemeProvider theme={theme}>\n                    <Button color=\"black\" variant=\"outlined\" onClick={props.onHide}>Cancel</Button>\n                    <Button ref={refConfirmBtn} color=\"black\" variant=\"outlined\" onClick={handleSubmit}>Confirm</Button>\n                </ThemeProvider>\n                <ErrorOverlay target={refConfirmBtn.current} error={[errorMsg, setErrorMsg]} />\n            </Modal.Footer>\n        </Modal>\n    );\n}","import React, { useState } from \"react\";\nimport EditIcon from '@mui/icons-material/Edit';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Card } from \"react-bootstrap\";\nimport { IconButton } from \"@mui/material\";\nimport { EditCardModal } from \"./EditCardModal\";\n\nexport function SantaCard(props) {\n    const [showEditModal, setShowEditModal] = useState(false);\n    const handleShowResult = () => {\n        props.showResult(props.santa);\n    }\n\n    const handleRemove = () => {\n        props.removeSanta(props.santa.id);\n    };\n\n    const editButton = \n        <IconButton \n            className=\"right\" \n            fontSize=\"small\" \n            onClick={() => setShowEditModal(true)} >\n            <EditIcon />\n        </IconButton>;\n\n    const removeButton = \n        <IconButton \n            className=\"right\" \n            fontSize=\"small\" \n            onClick={handleRemove}>\n            <CloseIcon />\n        </IconButton>;\n\n    return (\n        <Card className=\"SantaCard\" onClick={props.showResult? handleShowResult : null}>\n            <Card.Body>\n                    { props.removeSanta && removeButton}\n                    { true && editButton }\n                <Card.Title>\n                    {props.santa.name}\n                </Card.Title>\n                { props.assigned && <Card.Text>Assigned to {props.assigned.name}</Card.Text> }\n                <EditCardModal \n                    {...props}\n                    show={showEditModal} \n                    onHide={() => setShowEditModal(false)}\n                />\n            </Card.Body>\n        </Card>\n    );\n}","import React from \"react\";\nimport './SantaTable.css';\nimport { SantaCard } from \"./SantaCard\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nexport function SantaTable(props) {\n    const generateSantaCards = () => {\n        if ( props.santas.length > 0 ) {\n            return (\n                <Row xs={2} sm={3} md={5}>\n                    { props.santas.map( (santa) => (\n                        <Col>\n                            <SantaCard\n                                {...props}\n                                santa={santa}\n                                assigned={props.assignedVisible ? props.santas[santa.assigned] : null }\n                            />\n                        </Col>\n                    ))}\n                </Row>\n            );\n        } else {\n            return <p>There are no santa yet...</p>;\n        }\n    };\n    \n    return (\n        <Container className='SantaTable' fluid >\n            { generateSantaCards() }\n        </Container>\n    );\n}","import { Button, ThemeProvider } from \"@mui/material\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, FormControl} from \"react-bootstrap\";\nimport { ErrorOverlay } from \"../Common/ErrorOverlay\";\nimport { theme } from \"../constants\";\n\nexport function SantaInput(props) {\n    const [newName, setNewName] = useState('');\n    const [errorMsg, setErrorMsg] = useState(false);\n\n    const refAddBtn = useRef(null);\n    \n    const handleChange = (e) => {\n        setNewName(e.target.value);\n    }\n\n    const handleAdd = (e) => {\n        e.preventDefault();\n\n        const error = props.validateName(newName, true);\n        setErrorMsg(error);\n\n        if(!error) {\n            props.addSanta(newName);\n            setNewName('');　// clean the textbox\n        }\n    }\n\n    return (\n        <Form className='SantaInput' onSubmit={handleAdd}>\n            <FormControl \n                value={newName}\n                placeholder='Enter a name here...'\n                onChange={handleChange}\n                maxLength={20}/>\n            <ThemeProvider theme={theme}>\n                <Button \n                    ref={refAddBtn}\n                    color=\"black\"\n                    variant=\"outlined\"\n                    type=\"submit\" \n                    value=\"Add\">\n                    Add\n                </Button>\n            </ThemeProvider>\n            <ErrorOverlay target={refAddBtn.current} error={[errorMsg, setErrorMsg]} />\n        </Form>\n    );\n}","import React, { useState, useRef } from \"react\";\nimport './EditPage.css';\nimport { Container } from \"react-bootstrap\";\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { SantaInput } from \"./SantaInput\";\nimport { PAGE, theme } from \"../constants\";\nimport { ErrorOverlay } from \"../Common/ErrorOverlay\";\nimport { Button, ThemeProvider } from \"@mui/material\";\n\nexport function EditPage(props){\n    const [errorMsg, setErrorMsg] = useState(false);\n    const refConfirmBtn = useRef(null);\n\n    // Name validation Error\n    const ERROR_EMPTY = \"Name cannot be empty.\";\n    const ERROR_DUPLICATE = \"Name has been entered.\";\n\n    // Santa list validation Error\n    const ERROR_NOT_ENOUGHT_CANDIDATE = \"Please enter at least 2 names.\";\n\n    // Button handles\n    const handleBack = () => {\n        props.toPage(PAGE.START);\n    }\n\n    const handleConfirm = () => {\n        const error = validateSantaList();\n        setErrorMsg(error);\n        if (!error) {\n            props.toPage(PAGE.RESULT);\n        }\n    };\n\n    // Validations return error message if invalid or, otherwise, null\n    const validateName = (name, checkDuplication) => {\n        if (name === '') {\n            return ERROR_EMPTY;\n        }\n\n        if(checkDuplication){\n            for(let i = 0; i < props.santas.length; i++) {\n                if(props.santas[i].name === name) {\n                    return ERROR_DUPLICATE;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    const validateSantaList = () => {\n        if (props.santas.length < 2) {\n            return ERROR_NOT_ENOUGHT_CANDIDATE;\n        } else {\n            return null;\n        }\n    }\n\n    return (\n        <Container className='EditPage' fluid>\n            <SantaInput {...props} validateName={validateName} />\n            <SantaTable {...props} validateName={validateName} />\n            <div className='ButtonBar'>\n                <ThemeProvider theme={theme}>\n                    <Button color=\"black\" variant=\"outlined\" onClick={handleBack}>Back</Button>\n                    <Button ref={refConfirmBtn} color=\"black\" variant=\"outlined\" onClick={handleConfirm}>Confirm</Button>\n                </ThemeProvider>\n                <ErrorOverlay target={refConfirmBtn.current} error={[errorMsg, setErrorMsg]} />\n            </div>\n        </Container>\n    );\n}\n\n","import React from \"react\";\nimport { Modal } from \"react-bootstrap\";\nimport \"./CustomModal.css\";\n\nexport function CustomModal(props) {\n    return (\n        <Modal\n            {...props}\n            size=\"lg\"\n            centered\n        >\n            <Modal.Header closeButton>\n                <Modal.Title>\n                    { props.title }\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                { props.content }\n            </Modal.Body>\n        </Modal>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport './ResultPage.css';\nimport { Container } from \"react-bootstrap\";\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { CustomModal } from \"../Common/CustomModal\";\nimport { PAGE, theme } from \"../constants\";\nimport { Button, ThemeProvider } from \"@mui/material\";\n\nexport function ResultPage(props) {\n    const [showModal, setShowModal] = useState(false);\n    const [modalTitle, setModalTitle] = useState(null);\n    const [modalContent, setModalContent] = useState(null);\n    const [assignedVisible, setAssignedVisibility] = useState(false);\n\n    // Assign recipient once when the page is loaded\n    useEffect(() => {\n        props.assignRecipients();\n    }, []);\n\n    const handleBack = () => {\n        props.toPage(PAGE.EDIT);\n    }\n\n    const handleShuffle = () => {\n        props.assignRecipients();\n    }\n\n    const handleShow = () => {\n        setAssignedVisibility(!assignedVisible);\n    };\n\n    const handleFinish = () => {\n        props.toPage(PAGE.START);\n    };\n\n    const showResult = (santa) => {\n        // find recipient by array index\n        const recipient = props.santas[santa.assigned];\n\n        setModalTitle(<p>{santa.name}</p>);\n        setModalContent(\n            <p>Your recipient is <strong>{recipient.name}</strong>!</p>\n        );\n        setShowModal(true);\n    }\n\n    return (\n        <Container className='ResultPage' fluid>\n            <SantaTable santas={props.santas} showResult={showResult} assignedVisible={assignedVisible}/>\n            <p className=\"result-note\">*You can click on each box to check the recipient for a specific santa.</p>\n            <div className='ButtonBar'>\n\n                <ThemeProvider theme={theme}>\n                    <Button color=\"black\" variant=\"outlined\" onClick={handleBack}>Back</Button>\n                    <Button color=\"black\" variant=\"outlined\" onClick={handleShuffle}>Reshuffle!</Button>\n                    <Button color=\"black\" variant=\"outlined\" onClick={handleShow}>Show All!</Button>\n                    <Button color=\"black\" variant=\"outlined\" onClick={handleFinish}>Finished</Button>\n                </ThemeProvider>\n            </div>\n            <CustomModal \n                show={showModal}\n                onHide={() => setShowModal(false)}\n                title={modalTitle}\n                content={modalContent}\n            />\n        </Container>\n    );\n}","import React from \"react\";\nimport { Container, Navbar } from \"react-bootstrap\";\nimport './Header.css';\nimport { logo } from \"../constants\";\n\nexport function Header(props) {\n    return (\n        <Navbar className=\"Header\">\n            <Container className=\"justify-content-center\" fluid>\n                <img src={logo} alt=\"logo\" className=\"logo\" />\n                <p className=\"App-Name\">Secret Santa Generator</p>\n            </Container>\n        </Navbar>\n    );\n}","import React, { useEffect, useState } from 'react';\nimport { Button, ButtonGroup, Navbar } from 'react-bootstrap';\nimport { marked } from 'marked';\nimport './Footer.css';\nimport { CustomModal } from './CustomModal';\n\nconst changelogPath = \"https://raw.githubusercontent.com/Kit2196/secret-santa-generator/main/CHANGELOG.md\";\n        \nexport function Footer(props) {\n    const [showModal, setShowModal] = useState(false);\n    const [modalTitle, setModalTitle] = useState(null);\n    const [modalContent, setModalContent] = useState(null);\n    const [myPageClicked, setMyPageClicked] = useState(false);\n    const [projectClicked, setprojectClicked] = useState(false);\n\n    useEffect(() => {\n        const resetTimer = setInterval(() => setMyPageClicked(false), 1000);\n        return () => clearInterval(resetTimer);\n    }, [myPageClicked]);\n\n    useEffect(() => {\n        const resetTimer = setInterval(() => setprojectClicked(false), 1000);\n        return () => clearInterval(resetTimer);\n    }, [projectClicked]);\n\n    const showCredit = () => {\n        setModalTitle('Credit');\n        setModalContent(\n            <p>Illustration: <a　href=\"https://www.irasutoya.com/\">いらすとや</a></p>\n        );\n        setShowModal(true);\n    }\n\n    const showChangeLog = () => {\n        setModalTitle(<p>Loading</p>);\n        setShowModal(true);\n\n        fetch(changelogPath).then(\n            response => response.text()\n        ).then( \n            (text) => {\n                setModalTitle(<p>ChangeLog</p>);\n                setModalContent(\n                    <div className=\"Changelog\" dangerouslySetInnerHTML={{__html: marked.parse(text)}} \n                />)\n            }\n        );\n    }\n\n    const openPage = (url) => window.open(url, \"_blank\");\n\n    return (\n        <Navbar className='Footer justify-content-center'>\n            <ButtonGroup className='Footer-links'>\n                <Button variant=\"link\" onClick={showCredit}>Credit</Button>\n                <Button variant=\"link\" onClick={showChangeLog}>Change Log</Button>\n                <Button variant=\"link\" onClick={() => openPage('https://github.com/Kit2196/secret-santa-generator')}>Github Repository</Button>\n                <Button variant=\"link\" onClick={() => setMyPageClicked(true)}>{ myPageClicked ? \"WIP\": \"My page\" }</Button>\n                <Button variant=\"link\" onClick={() => setprojectClicked(true)}>{ projectClicked ? \"WIP\": \"Other projects\" }</Button>\n            </ButtonGroup>\n            <CustomModal \n                show={showModal} \n                onHide={() => setShowModal(false)}\n                title={modalTitle}\n                content={modalContent}\n            />\n        </Navbar>\n    );\n};","export class Utils {\n    /**\n     * Calculate the factorial for n\n     * \n     * @returns n!\n     */\n    static factorial(n) {\n        return (n > 1) ? this.factorial(n - 1) * n : 1;\n    }\n\n    /**\n     * Generate a random integer between range\n     * \n     * @param {int} min \n     * @param {int} max \n     * @returns a random integer between min and max \n     */\n    static randomInt(min, max) {\n        return Math.round(Math.random() * (max - min)) + min;\n    }\n\n    /**\n     * Generate a random derangement array\n     * \n     * Based on \"Generating Random Derangements\" by Martinez et. al\n     * source: https://epubs.siam.org/doi/pdf/10.1137/1.9781611972986.7\n     * @param {int} n the length of the desired derangement array\n     * @return the resulting derangement array\n     */\n    static derangement(n) {\n        let result = [...Array(n).keys()]; // init array: 0,1, 2, ...,n-1\n        let mark = Array(n).fill(false);   // init: all false\n\n        const D = (n) => (\n            (Utils.factorial(n) + 1) / Math.E\n        );\n\n        let i = n; // current index\n        let u = n; \n\n        while (u >= 2) {\n            if (!mark[i-1]) {\n                do {\n                    var j = Utils.randomInt(1, i - 1);\n                } while (mark[j-1]); // Until !mark[j]\n\n                // swap A[i] and A[j]\n                [result[i-1], result[j-1]] = [result[j-1], result[i-1]];\n\n                let p = Math.random();\n                if ( p < (u - 1) * D(u - 2) / D(u) ) {\n                    mark[j - 1] = true;\n                    u--;\n                }\n                u--;\n            }\n            i--;\n        }\n\n        return result;\n    }\n}","import React from \"react\";\nimport './SecretSanta.css';\nimport { StartPage } from \"./StartPage/StartPage\";\nimport { EditPage } from \"./EditPage/EditPage\";\nimport { ResultPage } from \"./ResultPage/ResultPage\";\nimport { Header } from \"./Common/Header\";\nimport { Footer } from './Common/Footer';\nimport { Utils } from \"./Utils\";\nimport { PAGE } from \"./constants\";\n\nexport class SecretSanta extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: PAGE.START,\n            santas: [],\n            rules: {}\n        }\n\n        this.toPage = this.toPage.bind(this);\n        this.addSanta = this.addSanta.bind(this);\n        this.editSanta = this.editSanta.bind(this);\n        this.removeSanta = this.removeSanta.bind(this);\n        this.removeAllSantas = this.removeAllSantas.bind(this);\n        this.assignRecipients = this.assignRecipients.bind(this);\n    }\n\n    toPage(page) {\n        let new_state = this.state;\n        new_state.page = page;\n        this.setState(new_state);\n    }\n\n    // State-related functions\n    addSanta(santaName) {\n        const new_santa = {\n            id: Date.now(),\n            name: santaName,\n            assigned: null\n        };\n        \n        let new_state = this.state;\n        new_state.santas = [ ...new_state.santas, new_santa ];\n        this.setState(new_state);\n    }\n\n    editSanta(targetId, newProfile) {\n        let new_state = this.state;\n        for(let i = 0; i < new_state.santas.length; i++) {\n            if(new_state.santas[i].id === targetId) {\n                new_state.santas[i] = newProfile;\n                break;\n            }\n        }\n        this.setState(new_state);\n    }\n\n    removeSanta(targetID) {\n        let new_state = this.state;\n        new_state.santas = new_state.santas.filter((santa) => (santa.id !== targetID));\n        this.setState(new_state);\n    }\n\n    removeAllSantas() {\n        let new_state = this.state;\n        new_state.santas = [];\n        this.setState(new_state);\n    }\n    \n    assignRecipients() {\n        const isResultValid = (result) => {\n            for(var i = 0; i < result.length; i++ ) {\n                if (i === result[i]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        let assignments;\n\n        do {\n        // Generate new pattern\n            assignments = Utils.derangement(this.state.santas.length);\n        } while(!isResultValid(assignments));\n\n        let newState = this.state;\n        // Assign recipient for each santa to the 'assigned' field\n        for( let i = 0; i < this.state.santas.length; i++ ) {\n            newState.santas[i].assigned = assignments[i];\n        }\n\n        this.setState(newState);\n    }\n\n    loadPage() {\n        switch(this.state.page) {\n            case PAGE.START:\n                return(\n                    <StartPage \n                        onStart={() => {this.toPage(PAGE.EDIT)}}\n                        removeAllSantas={this.removeAllSantas}\n                    />\n                );\n            case PAGE.EDIT:\n                return (\n                    <EditPage \n                        santas={this.state.santas}\n                        addSanta={this.addSanta}\n                        editSanta={this.editSanta}\n                        removeSanta={this.removeSanta}\n                        toPage={this.toPage}\n                    />\n                );\n            case PAGE.RESULT:\n                return (\n                    <ResultPage \n                        santas={this.state.santas}\n                        assignRecipients={this.assignRecipients}\n                        toPage={this.toPage}\n                    />\n                );\n            default:\n                return (<p>Error! Page not found!</p>);\n        }\n    }\n\n    render () {\n        return (\n            <div className='SecretSanta'>\n                { this.state.page !== PAGE.START && <Header /> }\n                { this.loadPage() }\n                < Footer />\n            </div>\n        );\n    }\n}","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { SecretSanta } from './SecretSanta';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SecretSanta />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}