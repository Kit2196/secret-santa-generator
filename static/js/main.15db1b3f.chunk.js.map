{"version":3,"sources":["constants.js","StartPage/StartPage.js","Common/SantaTable/SantaCard.js","Common/SantaTable/SantaTable.js","EditPage/SantaInput.js","EditPage/EditPage.js","Common/Overlay.js","ResultPage/ResultPage.js","Common/Header.js","Utils.js","SecretSanta.js","Common/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["logo","PAGE","StartPage","props","useEffect","removeAllSantas","className","src","alt","Button","variant","onClick","onStart","SantaCard","Card","showResult","santa","Body","removeSanta","CloseButton","id","Title","name","assigned","Text","SantaTable","santas","length","Container","fluid","Row","map","Col","assignedVisible","SantaInput","useState","newSanta","setNewSanta","Form","onSubmit","e","preventDefault","addSanta","FormControl","value","placeholder","onChange","target","maxLength","type","disabled","isSantaNameValid","EditPage","toPage","Overlay","disableOverlay","content","ResultPage","overlayContent","setOverlayContent","setAssignedVisibility","assignRecipients","recipient","Header","Navbar","fixed","Utils","n","this","factorial","min","max","Math","round","random","result","Array","keys","mark","fill","D","E","i","u","j","randomInt","SecretSanta","state","page","rules","bind","new_state","setState","santaName","new_santa","Date","now","targetID","filter","assignments","isResultValid","derangement","newState","current_page","hasHeader","React","Component","Footer","creditOverlayContent","href","ButtonGroup","fetch","then","response","text","dangerouslySetInnerHTML","__html","marked","parse","url","window","open","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.15db1b3f.chunk.js","sourcesContent":["export const logo = 'https://1.bp.blogspot.com/-NtTQSOUkR9o/XVKfuVfLHcI/AAAAAAABUEA/1JsyRnHO9-8SxPb_OYm-HKAQ10dV2C45QCLcBGAs/s1600/christmas_black_santa.png';\n\nexport const PAGE = {\n    START: 0,\n    EDIT: 1,\n    RESULT: 2\n}","import React, { useEffect } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport { logo } from \"../constants\";\nimport \"./StartPage.css\";\n\nexport function StartPage(props) {\n    // Reset santas, when the start screen is loaded\n    useEffect(() => {\n        props.removeAllSantas();\n    }, []);\n\n    return (\n        <div className='Start'>\n            <img src={logo} alt=\"logo\" />\n            <div>\n                <p className=\"App-Name\">Secret Santa Generator</p>\n                <Button variant=\"outline-dark\" onClick={props.onStart}>Start</Button>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\nimport { Card, CloseButton } from \"react-bootstrap\";\n\nexport function SantaCard(props) {\n    const handleShowResult = () => {\n        props.showResult(props.santa);\n    }\n\n    const handleRemove = () => {\n        props.removeSanta(props.santa.id);\n    };\n\n    return (\n        <Card className=\"SantaCard\" onClick={props.showResult? handleShowResult : null}>\n            <Card.Body>\n                { props.removeSanta && <CloseButton className=\"right\" onClick={handleRemove} /> }\n                <Card.Title>{props.santa.name}</Card.Title>\n                { props.assigned && <Card.Text>Assigned to {props.assigned.name}</Card.Text> }\n            </Card.Body>\n        </Card>\n    );\n}","import React from \"react\";\nimport './SantaTable.css';\nimport { SantaCard } from \"./SantaCard\";\nimport { Col, Container, Row } from \"react-bootstrap\";\n\nexport function SantaTable(props) {\n    if ( props.santas.length > 0 ) {\n        return (\n            <Container className='SantaTable' fluid >\n                <Row className=\"justify-content-center\">\n                    { props.santas.map( (santa) => (\n                        <Col><SantaCard \n                            santa={santa} \n                            showResult={props.showResult} \n                            removeSanta={props.removeSanta}\n                            assigned={props.assignedVisible ? props.santas[santa.assigned] : null }\n                        /></Col>\n                        \n                    ))}\n                </Row>\n            </Container>\n        );\n    } else {\n        return (<p>There are no santa yet...</p>);\n    }\n}","import React, { useState } from \"react\";\nimport { Button, Form, FormControl } from \"react-bootstrap\";\n\nexport function SantaInput(props) {\n    const [newSanta, setNewSanta] = useState('');\n    \n    const handleChange = (e) => {\n        setNewSanta(e.target.value);\n    }\n\n    const handleAdd = (e) => {\n        e.preventDefault();\n\n        props.addSanta(newSanta);\n        setNewSanta('');　// clean the textbox\n    }\n\n    return (\n        <Form className='SantaInput' onSubmit={handleAdd}>\n            <FormControl \n                value={newSanta}\n                placeholder='Enter a name here...'\n                onChange={handleChange}\n                maxLength={20}/>\n            <Button \n                variant=\"outline-dark\"\n                type=\"submit\" \n                value=\"Add\" \n                disabled={!props.isSantaNameValid(newSanta)}>\n                Add\n            </Button>\n        </Form>\n    );\n}","import React from \"react\";\nimport './EditPage.css';\nimport { Button, Container } from \"react-bootstrap\";\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { SantaInput } from \"./SantaInput\";\nimport { PAGE } from \"../constants\";\n\nexport function EditPage(props){\n    const handleConfirm = () => {\n        props.toPage(PAGE.RESULT);\n    };\n\n    const handleBack = () => {\n        props.toPage(PAGE.START);\n    }\n\n    const isSantaListValid = () => {\n        return props.santas.length >= 2;\n    };\n    \n\n    return (\n        <Container className='EditPage' fluid>\n            <SantaInput addSanta={props.addSanta} isSantaNameValid={props.isSantaNameValid} />\n            <SantaTable santas={props.santas} removeSanta={props.removeSanta} />\n            <div className='ButtonBar'>\n                <Button variant=\"outline-dark\" onClick={handleBack}>Back</Button>\n                <Button variant=\"outline-dark\" onClick={handleConfirm} disabled={!isSantaListValid()}>Confirm</Button>\n            </div>\n        </Container>\n    );\n}\n\n","import React from \"react\";\nimport { Container, CloseButton } from \"react-bootstrap\";\nimport \"./Overlay.css\";\n\nexport function Overlay(props) {\n    return (\n        <div className=\"Overlay\">\n            <Container className=\"Overlay-Container\">\n                <CloseButton className='Overlay-Close-Btn' onClick={props.disableOverlay} />\n                { props.content }\n            </Container>\n            <div className=\"Overlay-Greyscreen\" onClick={props.disableOverlay}> </div>\n        </div>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport './ResultPage.css';\nimport { Button, Container } from \"react-bootstrap\";\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { Overlay } from \"../Common/Overlay\";\nimport { PAGE } from \"../constants\";\n\nexport function ResultPage(props) {\n    const [overlayContent, setOverlayContent] = useState(null);\n    const [assignedVisible, setAssignedVisibility] = useState(false);\n\n    // Assign recipient once when the page is loaded\n    useEffect(() => {\n        props.assignRecipients();\n    }, []);\n\n    const handleBack = () => {\n        props.toPage(PAGE.EDIT);\n    }\n\n    const handleShuffle = () => {\n        props.assignRecipients();\n    }\n\n    const handleShow = () => {\n        setAssignedVisibility(!assignedVisible);\n    };\n\n    const handleFinish = () => {\n        props.toPage(PAGE.START);\n    };\n\n    const showResult = (santa) => {\n        // find recipient by array index\n        const recipient = props.santas[santa.assigned];\n\n        setOverlayContent(<div className=\"Overlay-Result\">\n            <p>{santa.name},</p>\n            <p>You are assigned to <strong>{recipient.name}</strong></p>\n        </div>);\n    }\n\n    return (\n        <Container className='SantaResult'>\n            <SantaTable santas={props.santas} showResult={showResult} assignedVisible={assignedVisible}/>\n            <div className='ButtonBar'>\n                <Button variant=\"outline-dark\" onClick={handleBack}>Back</Button>\n                <Button variant=\"outline-dark\" onClick={handleShuffle}>Reshuffle!</Button>\n                <Button variant=\"outline-dark\" onClick={handleShow}>Show All!</Button>\n                <Button variant=\"outline-dark\" onClick={handleFinish}>Finished</Button>\n            </div>\n            {overlayContent && <Overlay content={overlayContent} disableOverlay={() => setOverlayContent(null)}/>}\n        </Container>\n    );\n}","import React from \"react\";\nimport { Navbar, Container } from \"react-bootstrap\";\nimport './Header.css';\nimport { logo } from \"../constants\";\n\nexport function Header(props) {\n    return (\n        <Navbar className=\"Header\" fixed=\"top\">\n            <img src={logo} alt=\"logo\" className=\"logo\" />\n            <p className=\"App-Name\">Secret Santa Generator</p>\n        </Navbar>\n    );\n}","export class Utils {\n    /**\n     * Calculate the factorial for n\n     * \n     * @returns n!\n     */\n    static factorial(n) {\n        return (n > 1) ? this.factorial(n - 1) * n : 1;\n    }\n\n    /**\n     * Generate a random integer between range\n     * \n     * @param {int} min \n     * @param {int} max \n     * @returns a random integer between min and max \n     */\n    static randomInt(min, max) {\n        return Math.round(Math.random() * (max - min)) + min;\n    }\n\n    /**\n     * Generate a random derangement array\n     * \n     * Based on \"Generating Random Derangements\" by Martinez et. al\n     * source: https://epubs.siam.org/doi/pdf/10.1137/1.9781611972986.7\n     * @param {int} n the length of the desired derangement array\n     * @return the resulting derangement array\n     */\n    static derangement(n) {\n        let result = [...Array(n).keys()]; // init array: 0,1, 2, ...,n-1\n        let mark = Array(n).fill(false);   // init: all false\n\n        const D = (n) => (\n            (Utils.factorial(n) + 1) / Math.E\n        );\n\n        let i = n; // current index\n        let u = n; \n\n        while (u >= 2) {\n            if (!mark[i-1]) {\n                do {\n                    var j = Utils.randomInt(1, i - 1);\n                } while (mark[j-1]); // Until !mark[j]\n\n                // swap A[i] and A[j]\n                [result[i-1], result[j-1]] = [result[j-1], result[i-1]];\n\n                let p = Math.random();\n                if ( p < (u - 1) * D(u - 2) / D(u) ) {\n                    mark[j - 1] = true;\n                    u--;\n                }\n                u--;\n            }\n            i--;\n        }\n\n        return result;\n    }\n}","import React from \"react\";\nimport './SecretSanta.css';\nimport { StartPage } from \"./StartPage/StartPage\";\nimport { EditPage } from \"./EditPage/EditPage\";\nimport { ResultPage } from \"./ResultPage/ResultPage\";\nimport { Header } from \"./Common/Header\";\nimport { Utils } from \"./Utils\";\nimport { PAGE } from \"./constants\";\n\nexport class SecretSanta extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: PAGE.START,\n            santas: [],\n            rules: {}\n        }\n\n        this.toPage = this.toPage.bind(this);\n        this.addSanta = this.addSanta.bind(this);\n        this.removeSanta = this.removeSanta.bind(this);\n        this.removeAllSantas = this.removeAllSantas.bind(this);\n        this.assignRecipients = this.assignRecipients.bind(this);\n        this.isSantaNameValid = this.isSantaNameValid.bind(this);\n    }\n\n    toPage(page) {\n        let new_state = this.state;\n        new_state.page = page;\n        this.setState(new_state);\n    }\n\n    // State-related functions\n    addSanta(santaName) {\n        const new_santa = {\n            id: Date.now(),\n            name: santaName,\n            assigned: null\n        };\n        \n        let new_state = this.state;\n        new_state.santas = [ ...new_state.santas, new_santa ];\n        this.setState(new_state);\n    }\n\n    isSantaNameValid(santaName) {\n        // no empty name\n        if(santaName === '') {\n            return false;\n        }\n\n        // no repeated name\n        for(let i = 0; i < this.state.santas.length; i++) {\n            if(this.state.santas[i].name === santaName) {\n                return false;\n            }\n        }\n\n        return true\n    }\n\n    removeSanta(targetID) {\n        let new_state = this.state;\n        new_state.santas = new_state.santas.filter((santa) => (santa.id !== targetID));\n        this.setState(new_state);\n    }\n\n    removeAllSantas() {\n        let new_state = this.state;\n        new_state.santas = [];\n        this.setState(new_state);\n    }\n    \n    assignRecipients() {\n        const isResultValid = (result) => {\n            for(var i = 0; i < result.length; i++ ) {\n                if (i == result[i]) {\n                    return false;\n                }\n            }\n            return true;\n        };\n\n        let assignments;\n\n        do {\n        // Generate new pattern\n            assignments = Utils.derangement(this.state.santas.length);\n        } while(!isResultValid(assignments));\n\n        let newState = this.state;\n        // Assign recipient for each santa to the 'assigned' field\n        for( let i = 0; i < this.state.santas.length; i++ ) {\n            newState.santas[i].assigned = assignments[i];\n        }\n\n        this.setState(newState);\n    }\n\n    render () {\n        let current_page;\n        let hasHeader = true;\n        \n        switch(this.state.page) {\n            case PAGE.START:\n                current_page = \n                    <StartPage \n                        onStart={() => {this.toPage(PAGE.EDIT)}}\n                        removeAllSantas={this.removeAllSantas}\n                    />;\n                hasHeader = false;\n                break;\n            case PAGE.EDIT:\n                current_page = \n                    <EditPage \n                        santas={this.state.santas}\n                        addSanta={this.addSanta}\n                        removeSanta={this.removeSanta}\n                        isSantaNameValid={this.isSantaNameValid}\n                        toPage={this.toPage}\n                    />;\n                break;\n            case PAGE.RESULT:\n                current_page =\n                    <ResultPage \n                        santas={this.state.santas}\n                        assignRecipients={this.assignRecipients}\n                        toPage={this.toPage}\n                    />\n                break;\n            default:\n                current_page = <p>Error! Page not found!</p>;\n        }\n\n        return (\n            <div className='SecretSanta'>\n                { hasHeader && <Header /> }\n                { current_page }\n            </div>\n        );\n    }\n}","import React, { useState } from 'react';\nimport { Button, ButtonGroup, Navbar } from 'react-bootstrap';\nimport { marked } from 'marked';\nimport './Footer.css';\nimport { Overlay } from './Overlay';\n\nexport function Footer(props) {\n    const [overlayContent, setOverlayContent] = useState(null);\n\n    const creditOverlayContent = <div className=\"Credit\">\n        <h1>Credit</h1>\n        <p>Illustration: <a　href=\"https://www.irasutoya.com/\">いらすとや</a></p>\n    </div>;\n    \n    const loadChangelog = () => {\n        const changelogPath = \"https://raw.githubusercontent.com/Kit2196/secret-santa-generator/main/CHANGELOG.md\";\n        setOverlayContent(<div>\n            <p>Loading</p>\n        </div>);\n\n        fetch(changelogPath).then(\n            response => response.text()\n        ).then(\n            text => setOverlayContent(<div className=\"Changelog\" dangerouslySetInnerHTML={{__html: marked.parse(text)}} />)\n        );\n    };\n\n    const openPage = (url) => window.open(url, \"_blank\");\n\n    return (\n        <Navbar className='Footer justify-content-center' fixed=\"bottom\">\n            <ButtonGroup className='Footer-links'>\n                <Button variant=\"link\" onClick={() => setOverlayContent(creditOverlayContent)}>Credit</Button>\n                <Button variant=\"link\" onClick={loadChangelog}>Change Log</Button>\n                <Button variant=\"link\" onClick={() => openPage('https://github.com/Kit2196/secret-santa-generator')}>Github Repository</Button>\n                <Button variant=\"link\" >My page</Button>\n                <Button variant=\"link\" >Other projects</Button>\n            </ButtonGroup>\n            {overlayContent && <Overlay content={overlayContent} disableOverlay={() => setOverlayContent(null)}/>}\n        </Navbar>\n    );\n};","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { SecretSanta } from './SecretSanta';\nimport { Footer } from './Common/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SecretSanta />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}