{"version":3,"sources":["constants.js","StartPage/StartPage.js","Common/SantaTable/SantaCell.js","Common/SantaTable/SantaTable.js","EditPage/SantaInput.js","EditPage/EditPage.js","ResultPage/ResultPage.js","Common/PageControl.js","Common/Header.js","Utils.js","SecretSanta.js","Common/Overlay.js","Common/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["logo","StartPage","props","className","src","alt","onClick","onStart","SantaCell","santa","name","removeSanta","id","SantaTable","santas","length","map","SantaInput","useState","newSanta","setNewSanta","onSubmit","e","preventDefault","addSanta","value","placeholder","onChange","target","type","EditPage","ResultPage","PageControl","buttons","button","action","text","enabled","disabled","Header","Utils","n","this","factorial","min","max","Math","round","random","result","Array","keys","mark","fill","D","E","i","u","j","randomInt","PAGE","SecretSanta","state","page","rules","toPage","bind","generateNewSantaAssignment","new_state","setState","santaName","new_santa","Date","now","targetID","filter","newOrder","derangement","index","console","log","current_page","hasHeader","hasPageControl","React","Component","Overlay","disableOverlay","content","Footer","overlayContent","setOverlayContent","creditOverlayContent","href","fetch","then","response","dangerouslySetInnerHTML","__html","marked","parse","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.62da6b58.chunk.js","sourcesContent":["export const logo = 'https://1.bp.blogspot.com/-NtTQSOUkR9o/XVKfuVfLHcI/AAAAAAABUEA/1JsyRnHO9-8SxPb_OYm-HKAQ10dV2C45QCLcBGAs/s1600/christmas_black_santa.png';\n","import React from \"react\";\nimport { logo } from \"../constants\";\nimport \"./StartPage.css\";\n\nexport function StartPage(props) {\n    return (\n        <div className='Start'>\n            <img src={logo} alt=\"logo\" />\n            <div>\n                <p>Secret Santa Generator</p>\n                <button onClick={props.onStart}>Start</button>\n            </div>\n        </div>\n    );\n}","import React from \"react\";\n\nexport function SantaCell(props) {\n    const handleRemove = () => {\n        props.removeSanta(props.santa.id);\n    };\n\n    return (\n        <li key={props.santa.id} className='SantaCell' >\n            <p>{props.santa.name}</p>\n            { props.removeSanta && <button className='CellRemoveBtn' onClick={handleRemove}>✖</button> }\n        </li>\n    );\n}\n\n","import React from \"react\";\nimport { SantaCell } from \"./SantaCell\";\n\nexport function SantaTable(props) {\n    if ( props.santas.length > 0 ) {\n        return (\n            <ul className='SantaTable'> \n                { props.santas.map( (santa) => (\n                    <SantaCell santa={santa} removeSanta={props.removeSanta}/>\n                ))}\n            </ul>\n        );\n    } else {\n        return (<p>There are no santa yet...</p>);\n    }\n}","import React, { useState } from \"react\";\n\nexport function SantaInput(props) {\n    const [newSanta, setNewSanta] = useState('');\n    \n    const handleChange = (e) => {\n        setNewSanta(e.target.value);\n    }\n\n    const handleAdd = (e) => {\n        e.preventDefault();\n\n        if(props.addSanta(newSanta)) {\n            // if new name is valid, reset the textbox\n            setNewSanta('');\n        }\n    }\n\n    return (\n        <form className='SantaInput' onSubmit={handleAdd}>\n            <input \n                value={newSanta}\n                placeholder='Enter a name here...'\n                onChange={handleChange}\n            />\n            <input type=\"submit\" value=\"Add\" />\n        </form>\n    );\n}","import React from \"react\";\nimport './EditPage.css';\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\nimport { SantaInput } from \"./SantaInput\";\n\nexport function EditPage(props){\n    return (\n        <div className='EditPage'>\n            <SantaInput addSanta={props.addSanta} />\n            <SantaTable santas={props.santas} removeSanta={props.removeSanta} />\n        </div>\n    );\n}\n\n","import React from \"react\";\nimport './ResultPage.css';\nimport { SantaTable } from \"../Common/SantaTable/SantaTable\";\n\nexport function ResultPage(props) {\n    return (\n        <div className='SantaResult'>\n            <SantaTable santas={props.santas} />\n        </div>\n    );\n}","import React from \"react\";\nimport './PageControl.css';\n\nexport function PageControl(props) {\n    return (\n        <div className='PageControl'>\n            {\n                props.buttons.map((button) => {\n                    const [action, text, enabled] = button;\n\n                    return (\n                        <button onClick={action} disabled={!enabled}>\n                            {text}\n                        </button>\n                    );\n                })\n            }\n        </div>\n    );\n}","import React from \"react\";\nimport './Header.css';\nimport { logo } from \"../constants\";\n\nexport function Header(props) {\n    return (\n        <div className='Header'>\n            <img src={logo} alt=\"logo\" />\n            <p>Secret Santa Generator</p>\n        </div>\n    );\n}","export class Utils {\n    static factorial(n) {\n        return (n > 1) ? this.factorial(n - 1) * n : 1;\n    }\n\n    static randomInt(min, max) {\n        return Math.round(Math.random() * (max - min)) + min;\n    }\n\n    static derangement(n) {\n        let result = [...Array(n).keys()]; // init: 0,1,2,3,4,...,n-1\n        let mark = Array(n).fill(false);   // init: all false\n\n        const D = (n) => (\n            (Utils.factorial(n) + 1) / Math.E\n        );\n\n        let i = n; // current index\n        let u = n; \n\n        while (u >= 2) {\n            if (!mark[i-1]) {\n                do {\n                    var j = Utils.randomInt(1, i - 1);\n                } while (mark[j-1]); // Until !mark[j]\n\n                // swap A[i] and A[j]\n                [result[i-1], result[j-1]] = [result[j-1], result[i-1]];\n\n                let p = Math.random();\n                if ( p < (u - 1) * D(u - 2) / D(u) ) {\n                    mark[j - 1] = true;\n                    u--;\n                }\n                u--;\n            }\n            i--;\n        }\n\n        return result;\n    }\n}","import React from \"react\";\nimport './SecretSanta.css';\nimport { StartPage } from \"./StartPage/StartPage\";\nimport { EditPage } from \"./EditPage/EditPage\";\nimport { ResultPage } from \"./ResultPage/ResultPage\";\nimport { PageControl } from \"./Common/PageControl\";\nimport { Header } from \"./Common/Header\";\nimport { Utils } from \"./Utils\";\n\nconst PAGE = {\n    START: 0,\n    EDIT: 1,\n    RESULT: 2\n}\n\nexport class SecretSanta extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            page: PAGE.START,\n            santas: [],\n            rules: {}\n        }\n\n        this.toPage = this.toPage.bind(this);\n        this.addSanta = this.addSanta.bind(this);\n        this.removeSanta = this.removeSanta.bind(this);\n        this.generateNewSantaAssignment = this.generateNewSantaAssignment.bind(this);\n    }\n\n    toPage(page) {\n        let new_state = this.state;\n        new_state.page = page;\n        this.setState(new_state);\n    }\n\n    // State-related functions\n    addSanta(santaName) {\n        // no empty name\n        if(santaName === '') {\n            return false;\n        }\n\n        // no repeated name\n        for(let i = 0; i < this.state.santas.length; i++) {\n            if(this.state.santas[i].name === santaName) {\n                return false;\n            }\n        }\n\n        const new_santa = {\n            id: Date.now(),\n            name: santaName\n        };\n        \n        let new_state = this.state;\n        new_state.santas = [ ...new_state.santas, new_santa ];\n        this.setState(new_state);\n\n        return true;\n    }\n\n    removeSanta(targetID) {\n        let new_state = this.state;\n        new_state.santas = new_state.santas.filter((santa) => (santa.id !== targetID));\n        this.setState(new_state);\n    }\n    \n    generateNewSantaAssignment() {\n        const newOrder = Utils.derangement(this.state.santas.length);\n\n        const result = newOrder.map((index) => (this.state.santas[index]));\n\n        console.log(newOrder);\n        \n        return result;\n    }\n\n    render () {\n        let current_page;\n        let hasHeader = true;\n        let hasPageControl = true;\n        let buttons;\n        \n        switch(this.state.page) {\n            case PAGE.START:\n                current_page = <StartPage onStart={() => {this.toPage(PAGE.EDIT)}}/>;\n                hasHeader = false;\n                hasPageControl = false;\n                break;\n            case PAGE.EDIT:\n                current_page = \n                    <EditPage \n                        santas={this.state.santas}\n                        addSanta={this.addSanta}\n                        removeSanta={this.removeSanta}\n                    />;\n                buttons = [\n                    [() => this.toPage(PAGE.START), 'Back', true],\n                    [() => this.generateNewSantaAssignment(), 'Haha', true],\n                    [() => this.toPage(PAGE.RESULT), 'Confirm', true]\n                ];\n                break;\n            case PAGE.RESULT:\n                current_page =\n                    <ResultPage \n                        santas={this.state.santas}\n                    />\n                buttons = [\n                    [() => this.toPage(PAGE.EDIT), 'Back', true],\n                    [() => this.toPage(PAGE.START), 'Finish', true]\n                ];\n                break;\n            default:\n                current_page = <p>Error! Page not found!</p>;\n        }\n\n        return (\n            <div className='SecretSanta'>\n                { hasHeader && <Header /> }\n                { current_page }\n                { \n                    hasPageControl && \n                    <PageControl \n                        buttons={buttons}\n                    />\n                }\n            </div>\n        );\n    }\n}","import React from \"react\";\nimport \"./Overlay.css\";\n\nexport function Overlay(props) {\n    return (\n        <div className=\"Overlay\">\n            <div className=\"Overlay-Container\">\n                <button className='Overlay-Close-Btn' onClick={props.disableOverlay} >✖</button>\n                { props.content }\n            </div>\n            <div className=\"Overlay-Greyscreen\" onClick={props.disableOverlay}> </div>\n        </div>\n    );\n}","import React, { useState } from 'react';\nimport { marked } from 'marked';\nimport './Footer.css';\nimport { Overlay } from './Overlay';\n\nexport function Footer(props) {\n    const [overlayContent, setOverlayContent] = useState(null);\n\n    const creditOverlayContent = <div className=\"Credit\">\n        <h1>Credit</h1>\n        <p>Illustration: <a　href=\"https://www.irasutoya.com/\">いらすとや</a></p>\n    </div>;\n    \n    const loadChangelog = () => {\n        const changelogPath = \"https://raw.githubusercontent.com/Kit2196/secret-santa-generator/main/CHANGELOG.md\";\n        setOverlayContent(<div>\n            <p>Loading</p>\n        </div>);\n\n        fetch(changelogPath).then(\n            response => response.text()\n        ).then(\n            text => setOverlayContent(<div className=\"Changelog\" dangerouslySetInnerHTML={{__html: marked.parse(text)}} />)\n        );\n    };\n\n    return (\n        <div className='Footer'>\n            <ul className='Footer-links'>\n                <li onClick={() => setOverlayContent(creditOverlayContent)}>Credit</li>\n                <li onClick={loadChangelog}>Change Log</li>\n                <li><a href='https://github.com/Kit2196/secret-santa-generator'>Github Repository</a></li>\n                <li>My page</li>\n                <li>Other projects</li>\n            </ul>\n            {overlayContent && <Overlay content={overlayContent} disableOverlay={() => setOverlayContent(null)}/>}\n        </div>\n    );\n};","import './App.css';\nimport { SecretSanta } from './SecretSanta';\nimport { Footer } from './Common/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SecretSanta />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}